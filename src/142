	SUBROUTINE EXACT(X, YOBS, ALPHA, N, K, P, XSIZE, PLT, PEQ, IFAULT)
C
C	  ALGORITHM AS 142 APPL. STATIST. (1979) VOL.28, NO.3
C
C	  CALCULATES THE EXACT PROBABILITIES
C	  P(T(P) .LT. ALPHA) AND P(T(P) .EQ. ALPHA)
C	  WHERE T(P) IS THE CONDITIONAL TEST STATISTIC FOR THE
C	  REGRESSION PARAMETER BETA(P) IN A BINARY REGRESSION MODEL
C
	INTEGER P, XSIZE, YOBS(N), Y(30), P1
	INTEGER CLT, CEQ, CTOT
	REAL ALPHA, PLT, PEQ, X(XSIZE, P)
	REAL T(10), SUM
C
C	  CHECK FOR INPUT PARAMETERS OUT OF RANGE
C
	IFAULT = 1
	IF (N .GT. 30) RETURN
	IFAULT = 2
	IF (P .GT. 10) RETURN
	IFAULT = 3
	IF (K .LT. 0 .OR. K .GT. N) RETURN
	IFAULT = 0
	PEQ = 1.0
	PLT = 0.0
	IF (K .EQ. 0 .OR. K .EQ. N) RETURN
C
C	  INITIALIZATION
C	  1.  CALCULATE OBSERVED VALUES OF CONDITIONING STATISTICS
C	  T(2), ... ,T(P-1)
C	  2.  CALCULATE INITIAL PERMUTATION OF K ONES AND
C	  N-K ZEROES (1, ..., 1, 0, ..., 0)
C	  3.  INITIALIZE NUMERATORS AND DENOMINATOR TO ZERO
C
	DO 2 I = 1, P
	T(I) = 0
	DO 1 J = 1, N
1	IF (YOBS(J) .EQ. 1) T(I) = T(I) + X(J, I)
2	CONTINUE
	P1 = P - 1
	DO 3 I = 1, K
3	Y(I) = 1
	KK = K + 1
	DO 4 I = KK, N
4	Y(I) = 0
	CLT = 0
	CEQ = 0
	CTOT = 0
C
C	  CALCULATE VALUES OF CONDITIONING STATISTICS (T(2),...T(P-1))
C	  FOR CURRENT PERMUTATION.
C	  ADD ONE TO DENOMINATOR ONLY IF ALL MATCH OBSERVED VALUES
C
5	IF (P1 .EQ. 0) GOTO 8
	DO 7 I = 1, P1
	SUM = 0.0
	DO 6 J = 1, N
	IF (Y(J) .NE. 0) SUM = SUM + X(J, I)
6	CONTINUE
	IF (SUM .NE. T(I)) GOTO 10
7	CONTINUE
8	CTOT = CTOT + 1
C
C	  CALCULATE VALUE OF T(P) FOR CURRENT PERMUTATION
C
	SUM = 0.0
	DO 9 I = 1, N
	IF (Y(I) .NE. 0) SUM = SUM + X(I, P)
9	CONTINUE
C
C	  ADD ONE TO NUMERATOR(S) ONLY IF TEST IS PASSED
C
	IF (SUM .LT. ALPHA) CLT = CLT + 1
	IF (SUM .EQ. ALPHA) CEQ = CEQ + 1
C
C	  GET ANOTHER PERMUTATION.
C	  IF LAST IS ALREADY PROCESSED THEN CALCULATE
C	  PROBABILITY AS NUMERATOR/DENOMINATOR
C
10	CALL GETONE(Y, N, IFLAG)
	IF (IFLAG .EQ. 0) GOTO 5
	PEQ = FLOAT(CEQ) / FLOAT(CTOT)
	PLT = FLOAT(CLT) / FLOAT(CTOT)
	RETURN
	END
C
	SUBROUTINE GETONE(RET, N, IFLAG)
C
C	  ALGORITHM AS 142.1 APPL. STATIST. (1979) VOL.28, NO.3
C
C	  SET DEFAULT RETURN FLAG
C	  FLAG=1 - LAST PERMUTATION
C	  (0, ..., 0, 1, ..., 1) GENERATED ON PREVIOUS CALL
C	  FLAG=0 - RETURNED PERMUTATION SHOULD BE PROCESSED
C
	INTEGER RET(N)
	IFLAG = 0
C
C	  INITIAL ACTION DEPENDS ON LEADING ONE OR ZERO
C
	IF (RET(1) .EQ. 0) GOTO 2
C
C	  IF LEADING ONE, LOOK FOR FIRST ZERO, THEN
C	  INTERCHANGE WITH LAST ONE
C
	DO 1 I = 2, N
	IF (RET(I) .EQ. 1) GOTO 1
	RET(I) = 1
	RET(I - 1) = 0
	RETURN
1	CONTINUE
	RETURN
C
C	  INITIAL DIGIT IS ZERO
C	  FIND FIRST ONE THEN NEXT ZERO (COORDINATE J)
C	  CHECK FOR LAST PERMUTATION
C
2	N2 = N - 1
	DO 3 I = 2, N2
	IF (RET(I) .EQ. 1) GOTO 4
3	CONTINUE
	IFLAG = 1
	RETURN
4	I2 = I + 1
	DO 5 J = I2, N
	IF (RET(J) .EQ. 0) GOTO 6
5	CONTINUE
	IFLAG = 1
	RETURN
C
C	  NOT ON LAST PERMUTATION THEREFORE
C	  DEMOTE LAST ONE (INTERCHANGE LAST ONE - NEXT ZERO)
C	  AND REVERSE PRECEDING ZEROES-ONES
C
6	RET(J) = 1
	RET(J - 1) = 0
	IF (J .EQ. 2) RETURN
	K = J - 2
	J = K / 2
	DO 7 I = 1, J
	SAVE = RET(K)
	RET(K) = RET(I)
	RET(I) = SAVE
	K = K - 1
7	CONTINUE
	RETURN
	END

