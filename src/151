      SUBROUTINE BIVCNT(N1,N2,TZERO,NSECT,T1,T2,NF,TTEMP,SPC1,SPC2,C1,
     * S1,C2,S2,NT1,NT2,NN1,NN2,SPEC1,SPEC2,COHERE,PHASE,FREQ,IFAULT)
C
C<<<<<  Acquired in machine-readable form from 'Applied Statistics'
C<<<<<  algorithms editor, January 1983.
C
C     ALGORITHM AS 151 APPL. STATIST. (1980) VOL.29, NO.2
C
C     CALCULATES SMOOTHED SPECTRAL ESTIMATES FOR A BIVARIATE POINT
C     PROCESS BY SPLITTING THE PERIOD OF OBSERVATION INTO NONOVERLAPPING
C     SECTIONS OF EQUAL LENGTH
C
      DIMENSION T1(N1),T2(N2),FREQ(NF),SPEC1(NF),SPEC2(NF),COHERE(NF),
     1 PHASE(NF),C1(NF),S1(NF),C2(NF),S2(NF),TTEMP(NF),SPC1(NF),SPC2(NF)
      INTEGER NT1(NSECT),NT2(NSECT),NN1(NSECT),NN2(NSECT)
C
C     TEST FOR PARAMETER ERRORS
C
      IF(TZERO.LE.0.0) GO TO 9
      IF(N1.LE.0 .OR. N2.LE.0) GO TO 10
      IF(T1(N1).GT.TZERO .OR. T2(N2).GT.TZERO) GO TO 11
      IF(NSECT.LE.0) GO TO 12
      IF(NF.LT.NSECT) GO TO 13
      IFAULT = 0
C
C     INITIALISE ARRAYS FOR ACCUMULATING SPECTRAL ESTIMATES
C
      DO 1 I = 1,NF
      SPEC1(I) = 0.0
      SPEC2(I) = 0.0
      COHERE(I) = 0.0
      PHASE(I) = 0.0
    1 CONTINUE
C
C     UNLESS NSECT = 1,CALL SPLIT TO SECTION THE PERIOD OF OBSERVATION
C     AND CALCULATE THE EVENT TIMES RELATIVE TO THE SECTION ORIGINS
C
      NT1(1) = N1
      NT2(1) = N2
      NN1(1) = N1
      NN2(1) = N2
      IF(NSECT.EQ.1) GO TO 3
      CALL SPLIT(NSECT, N1, TZERO, T1, NT1, TTEMP, IFAULT)
      IF (IFAULT.NE.0) RETURN
      CALL SPLIT(NSECT, N2, TZERO, T2, NT2, TTEMP, IFAULT)
      IF(IFAULT.NE.0) RETURN
C
C     CALCULATE NO. OF EVENTS IN EACH SECTION OF BOTH SERIES
C
      NN1(1) = NT1(1)
      NN2(1) = NT2(1)
C
C     TEST WHETHER THE WORKSPACE ARRAY TTEMP(.) IS LARGE ENOUGH
C     TO STORE THE EVENT TIMES IN SECTION 1 OF EACH SERIES
C
      IF(NN1(1).GT.NF.OR.NN2(1).GT.NF) GO TO 14
      DO 2 I = 2,NSECT
      NN1(I) = NT1(I)-NT1(I-1)
      NN2(I) = NT2(I)-NT2(I-1)
C
C     DO THE SAME FOR THE OTHER SECTIONS
C
      IF(NN1(I).GT.NF.OR.NN2(I).GT.NF) GO TO 14
    2 CONTINUE
C
C     CALL SCOUNT SECTION BY SECTION,USING TTEMP(.) TO STORE
C     THE EVENT TIMES TEMPORARILY
C
    3 FN = 1.0/FLOAT(NSECT)
      TS = TZERO*FN
      KU1 = 0
      KU2 = 0
      DO 7 J = 1,NSECT
      KL1 = KU1+1
      KU1 = NT1(J)
      KL2 = KU2+1
      KU2 = NT2(J)
      DO 4 I = KL1,KU1
      K = I-KL1+1
      TTEMP(K) = T1(I)
    4 CONTINUE
C
C     CALL SCOUNT WITH NW-1 TO OBTAIN THE NORMALISED PERIODOGRAM AND
C     THE SUM OF SINES AND COSINES FOR SECTION J OF SERIES 1
C
      CALL SCOUNT(NN1(J), TS, NF, 1, TTEMP, SPC1, FREQ, C1, S1, IFAULT)
      IF(IFAULT.NE.0) RETURN
      DO 5 I = KL2, KU2
      K = I-KL2+1
      TTEMP(K) = T2(I)
    5 CONTINUE
C
C     DO THE SAME FOR SERIES 2
C
      CALL SCOUNT(NN2(J), TS, NF, 1, TTEMP, SPC2, FREQ, C2, S2, IFAULT)
      IF(IFAULT.NE.0) RETURN
      SQNN = 1.0/SQRT(FLOAT(NN1(J)*NN2(J)))
C
C     ACCUMULATE(OVER THE NSECT SECTIONS) THE SPECTRAL ESTIMATES
C                      AT EACH FREQUENCY
C
      DO 6 I = 1,NF
      SPEC1(I) = SPEC1(I) + SPC1(I)
      SPEC2(I) = SPEC2(I) + SPC2(I)
      COHERE(I) = COHERE(I) + (C1(I)*C2(I) + S1(I)*S2(I))*SQNN
      PHASE(I) = PHASE(I) + (C2(I)*S1(I) - C1(I)*S2(I))*SQNN
    6 CONTINUE
    7 CONTINUE
C
C     NOW FIND THE SMOOTHED ESTIMATES
C
      DO 8 I = 1,NF
      SPEC1(I) = SPEC1(I)*FN
      SPEC2(I) = SPEC2(I)*FN
      TEMP = COHERE(I)
      COHERE(I) = 4.0*FN*FN*(TEMP*TEMP + PHASE(I)*PHASE(I))/
     1  (SPEC1(I)*SPEC2(I))
      PHASE(I) = ATAN2(PHASE(I),TEMP)
    8 CONTINUE
      RETURN
    9 IFAULT = 7
      RETURN
   10 IFAULT = 8
      RETURN
   11 IFAULT = 9
      RETURN
   12 IFAULT = 10
      RETURN
   13 IFAULT = 11
      RETURN
   14 IFAULT = 12
      RETURN
      END
      SUBROUTINE SPLIT(NSECT,NEVENT,TZERO,T,NT,TSECT,IFAULT)
C
C     ALGORITHM AS 151.1 APPL. STATIST. (1980) VOL.29, NO.2
C
C     SPLITS A PERIOD OF OBSERVATION ON A POINT PROCESS INTO
C     NONOVERLAPPING SECTIONS OF EQUAL LENGTH AND COMPUTES
C     THE EVENT TIMES RELATIVE TO THE SECTION ORIGINS
C
C
      DIMENSION T(NEVENT),TSECT(NSECT)
      INTEGER NT(NSECT)
      IFAULT = 0
C
C     TEST FOR PARAMETER ERRORS
C
      IF (NSECT.LE.1.OR.NSECT.GT.NEVENT) GO TO 7
      IF(TZERO.LE.0.0) GO TO 8
      IF(T(NEVENT).GT.TZERO) GO TO 9
C
      INITIA = NEVENT/NSECT
      JJ = NSECT-1
      FN = TZERO/FLOAT(NSECT)
      DO 4 I = 1,JJ
C
C     COMPUTE THE TIMES AT WHICH THE SECTIONS END
C
      TSECT(I) = FLOAT(I)*FN
C
C     AS A STARTING POINT,ASSUME THAT ALL SECTIONS CONTAIN THE
C     SAME NUMBER OF EVENTS
C
      NT(I) = I*INITIA
      INDEX = NT(I)
C
C     TEST WHETHER THE FINISHING POINT FOR SECTION I IS TOO
C     SMALL,JUST RIGHT OR TOO HIGH
C
      IF(T(INDEX)-TSECT(I))1,4,3
    1 NT(I) = NT(I)+1
      INDEX = NT(I)
      IF(INDEX.GT.NEVENT) GO TO 2
      IF(T(INDEX)-TSECT(I))1,4,2
    2 NT(I) = NT(I)-1
      GOTO 4
    3 NT(I) = NT(I)-1
      INDEX = NT(I)
      IF(INDEX.LT.1) GO TO 4
      IF(T(INDEX).GT.TSECT(I)) GO TO 3
    4 CONTINUE
      NT(NSECT) = NEVENT
C
C     NT(I) IS NOW EQUAL TO THE TOTAL NUMBER OF EVENTS IN
C     THE FIRST I SECTIONS
C
C     NOW COMPUTE THE EVENT TIMES RELATIVE TO THE SECTION ORIGINS -
C     FIRST TEST WHETHER SECTION 1 CONTAINS NO EVENTS
C
      IF(NT(1).EQ.0) GO TO 10
      DO 6 I = 2,NSECT
      KK = I-1
      LK = NT(KK)+1
      LU = NT(I)
C
C     TEST WHETHER THE SECTION CONTAINS NO EVENTS
C
      IF(LK.GT.LU) GO TO 10
      DO 5 J = LK,LU
    5 T(J) = T(J)-TSECT(KK)
    6 CONTINUE
      RETURN
    7 IFAULT = 13
      RETURN
    8 IFAULT = 14
      RETURN
    9 IFAULT = 15
      RETURN
   10 IFAULT = 16
      RETURN
      END
