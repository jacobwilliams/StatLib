      SUBROUTINE TETRA(A, B, C, D, R, SDR, SDZERO, ITYPE, IFAULT)
C
C        ALGORITHM  AS 116 APPL. STATIST. (1977) VOL.26, NO.3
C
C        TO COMPUTE THE TETRACHORIC CORRELATION (R) AND ITS STANDARD
C        ERRORS (SDR AND SDZERO) FROM THE FREQUENCIES OF A 2*2 TABLE
C        (A, B, C AND D)
C        X AND W ARE CONSTANTS USED IN GAUSSIAN QUADRATURE
C
      DIMENSION  X(16), W(16)
      DATA X(1) /0.9972638618/, X(2) /0.9856115115/, X(3) /0.9647622556/,
     1     X(4) /0.9349060759/, X(5) /0.8963211558/, X(6) /0.8493676137/,
     2     X(7) /0.7944837960/, X(8) /0.7321821187/, X(9) /0.6630442669/,
     3     X(10)/0.5877157572/, X(11)/0.5068999089/, X(12)/0.4213512761/,
     4     X(13)/0.3318686023/, X(14)/0.2392873623/, X(15)/0.1444719616/,
     5     X(16)/0.0483076657/
      DATA W(1) /0.0070186100/, W(2) /0.0162743947/, W(3) /0.0253920653/,
     1     W(4) /0.0342738629/, W(5) /0.0428358980/, W(6) /0.0509980593/,
     2     W(7) /0.0586840935/, W(8) /0.0658222228/, W(9) /0.0723457941/,
     3     W(10)/0.0781938958/, W(11)/0.0833119242/, W(12)/0.0876520930/,
     4     W(13)/0.0911738787/, W(14)/0.0938443991/, W(15)/0.0956387201/,
     5     W(16)/0.0965400885/
      DATA ZERO /0.0/, ONE/1.0/, TWO /2.0/, FOUR /4.0/, SIX /6.0/
      DATA HALF /0.5/, TWOPI/6.28318531/, SQT2PI /2.50662827/
      DATA RLIMIT /0.9999/, RCUT /0.95/, UPLIM /5.0/
      DATA CONST /1E-36/, CHALF /1E-18/
      DATA CONV /1E-8/, CITER /1E-6/, NITER /25/
C
C        INITIALIZATION
C
      R = ZERO
      SDZERO = ZERO
      SDR = ZERO
      ITYPE = 0
      IFAULT = 0
C
C       CHECK IF ANY CELL FREQUENCY IS NEGATIVE
C
      IF (A .LT. ZERO .OR. B .LT. ZERO .OR. C .LT. ZERO
     *   .OR. D .LT. ZERO) GOTO 92
C
C       CHECK IF ANY FREQUENCY IS ZERO AND SET KDELTA
C
      KDELTA = 1
      DELTA  = ZERO
      IF (A .EQ. ZERO .OR. D .EQ. ZERO) KDELTA  = 2
      IF (B .EQ. ZERO .OR. C .EQ. ZERO) KDELTA  = KDELTA + 2
C
C        KDELTA=4 MEANS TABLE HAS ZERO ROW OR COLUMN, RUN IS TERMINATED
C
      GOTO (4, 1, 2 , 92), KDELTA
C
C        DELTA IS 0.0, 0.5 OR -0.5 ACCORDING TO WHICH CELL IS ZERO
C
    1 DELTA  = HALF
      IF (A .EQ. ZERO .AND. D .EQ. ZERO) R = -ONE
      GOTO 4
    2 DELTA = -HALF
      IF (B .EQ. ZERO .AND. C .EQ. ZERO) R = ONE
    4 IF (R .NE. ZERO) ITYPE = 3
C
C        STORE FREQUENCIES IN  AA, BB, CC AND DD
C
      AA = A + DELTA
      BB = B - DELTA
      CC = C - DELTA
      DD = D + DELTA
      TOT = AA + BB + CC + DD
C
C        CHECK IF CORRELATION IS NEGATIVE, ZERO, POSITIVE
C
      IF (AA * DD - BB * CC) 7, 5, 6
    5 ITYPE = 4
C
C        COMPUTE PROBABILITIES OF QUADRANT AND OF MARGINALS
C        PROBAA AND PROBAC CHOSEN SO THAT CORRELATION IS POSITIVE.
C        KSIGN INDICATES WHETHER QUADRANTS HAVE BEEN SWITCHED
C
    6 PROBAA = AA / TOT
      PROBAC = (AA + CC) / TOT
      KSIGN = 1
      GOTO 8
    7 PROBAA = BB / TOT
      PROBAC = (BB + DD) / TOT
      KSIGN = 2
    8 PROBAB = (AA + BB) / TOT
C
C        COMPUTE NORMAL DEVIATES FOR THE MARGINAL FREQUENCIES
C        SINCE NO MARGINAL CAN BE ZERO, IE IS NOT CHECKED
C
      ZAC = PPND(PROBAC, IE)
      ZAB = PPND(PROBAB, IE)
      SS = EXP(-HALF * (ZAC ** 2 + ZAB ** 2)) / TWOPI
C
C        WHEN R IS 0.0, 1.0 OR -1.0, TRANSFER TO COMPUTE SDZERO
C
      IF (R .NE. ZERO .OR. ITYPE .GT. 0) GOTO 85
C
C        WHEN MARGINALS ARE EQUAL, COSINE EVALUATION IS USED
C
      IF (A .EQ. D .AND. B .EQ. C) GOTO 60
C
C        INITIAL ESTIMATE OF CORRELATION IS YULES Y
C
      RR = (SQRT(AA * DD) - SQRT(BB * CC)) ** 2 / ABS(AA * DD - BB * CC)
      ITER = 0
C
C        IF RR EXCEEDS RCUT, GAUSSIAN QUADRATURE IS USED
C
   10 IF (RR .GT. RCUT) GOTO 40
C
C        TETRACHORIC SERIES IS COMPUTED
C
C        INITIALIZATION
C
      VA = ONE
      VB = ZAC
      WA = ONE
      WB = ZAB
      TERM = ONE
      ITERM = 0
      SUM = PROBAB * PROBAC
      DERIV = ZERO
      SR = SS
   15 IF (ABS(SR) .GT. CONST) GOTO 20
C
C        RESCALE TERMS TO AVOID OVERFLOWS AND UNDERFLOWS
C
      SR = SR / CONST
      VA = VA * CHALF
      VB = VB * CHALF
      WA = WA * CHALF
      WB = WB * CHALF
C
C        FORM SUM AND DERIVATIVE OF SERIES
C
   20 DR = SR * VA * WA
      SR = SR * RR / TERM
      COF = SR * VA * WA
C
C        ITERM COUNTS NO. OF CONSECUTIVE TERMS .LT. CONV
C
      ITERM = ITERM + 1
      IF (ABS(COF) .GT. CONV) ITERM = 0
      SUM = SUM + COF
      DERIV = DERIV + DR
      VAA = VA
      WAA = WA
      VA = VB
      WA = WB
      VB = ZAC * VA - TERM * VAA
      WB = ZAB * WA - TERM * WAA
      TERM = TERM + ONE
      IF (ITERM .LT. 2 .OR. TERM .LT. SIX) GOTO 15
C
C        CHECK IF ITERATION CONVERGED
C
      IF (ABS(SUM-PROBAA) .GT. CITER) GOTO 25
C
C        ITERATION HAS CONVERGED, SET ITYPE
C
      ITYPE = TERM
      GOTO 70
C
C        CALCULATE NEXT ESTIMATE OF CORRELATION
C
   25 ITER = ITER + 1
C
C        IF TOO MANY ITERATlONS, RUN IS TERMINATED
C
      IF (ITER .GE. NITER) GOTO 93
      DELTA = (SUM - PROBAA) / DERIV
      RRPREV = RR
      RR = RR - DELTA
      IF (ITER .EQ. 1) RR = RR + HALF * DELTA
      IF (RR .GT. RLIMIT) RR = RLIMIT
      IF (RR .LT. ZERO) RR = ZERO
      GOTO 10
C
C       GAUSSIAN QUADRATURE
C
   40 IF (ITER .GT. 0) GOTO 41
C
C       INITIALIZATION, IF THIS IS FIRST ITERATION
C
      SUM = PROBAB * PROBAC
      RRPREV = ZERO
C
C        INITIALIZATION
C
   41 SUMPRV = PROBAB - SUM
      PROB = BB / TOT
      IF (KSIGN .EQ. 2) PROB = AA / TOT
      ITYPE = 1
C
C        LOOP TO FIND ESTIMATE OF CORRELATION
C        COMPUTATION OF INTEGRAL (SUM) BY QUADRATURE
C
   42 RRSQ = SQRT(ONE - RR ** 2)
      AMID = HALF * (UPLIM + ZAC)
      XLEN = UPLIM - AMID
      SUM = ZERO
      DO 44 IQUAD = 1, 16
      XLA = AMID + X(IQUAD) * XLEN
      XLB = AMID - X(IQUAD) * XLEN
C
C       TO AVOID UNDERFLOWS, TEMPA AND TEMPB ARE USED
C
      TEMPA = (ZAB - RR * XLA) / RRSQ
      IF (TEMP A .G E. -SIX) SUM = SUM + W(IQUAD) *
     *  EXP(-HALF  * XLA ** 2) * ALNORM(TEMPA, .FALSE.)
      TEMPB = (ZAB - RR * XLB) / RRSQ
      IF (TEMPB .GE. -SIX) SUM = SUM + W(IQUAD) *
     *  EXP(-HALF * XLB ** 2) * ALNORM (TEMPB, .FALSE.)
   44 CONTINUE
      SUM = SUM * XLEN / SQT2PI
C
C        CHECK IF ITERATION HAS CONVERGED
C
      IF (ABS(PROB - SUM) .LE. CITER) GOTO 70
      ITER = ITER + 1
C
C         IF TOO MANY ITERATIONS, RUN IS TERMINATED
C
      IF (ITER .GE. NITER) GO TO 93
C
C         ESTIMATE CORRELATION FOR NEXT ITERATION BY LINEAR INTERPOLATION
C
      RREST = ((PROB -  SUM) * RRPREV - (PROB - SUMPRV) * RR)
     *   / (SUMPRV - SUM)
C
C        IS ESTIMATE POSITIVE AND LESS THAN UPPER LIMIT
C
      IF (RREST .GT . RLIMIT) RREST = RLIMIT
      IF (RREST .LT. ZERO) RREST = ZERO
      RRPREV = RR
      RR = RREST
      SUMPRV = SUM
C
C        IF ESTIMATE HAS SAME VALUE ON TWO ITERATIONS, STOP ITERATION
C
      IF (RR .EQ. RRPREV) GOTO 70
      GOTO 42
C
C        WHEN ALL MARGINALS ARE EQUAL THE COSINE FUNCTION IS USED
C
   60 RR = -COS(TWOPI * PROBAA)
      ITYPE = 2
C
C        COMPUTE SDR
C
   70 R = RR
      RRSQ = SQRT(ONE - R ** 2)
      IF (KDELTA .GT. 1) ITYPE = -ITYPE
      IF (KSIGN .EQ. 1) GOTO 71
      R = -R
      ZAC = -ZAC
   71 PDF = EXP(-HALF * (ZAC ** 2 - TWO * R * ZAC * ZAB + ZAB ** 2)
     *   / RRSQ ** 2) / (TWOPI * RRSQ)
      PAC = ALNORM((ZAC - R * ZAB) / RRSQ, .FALSE.) - HALF
      PAB = ALNORM((ZAB - R * ZAC) / RRSQ, .FALSE.) - HALF
      SDR = (AA + DD) * (BB + CC) / FOUR + PAB ** 2 * (AA + CC)
     1 * (BB + DD) + PAC ** 2 * (AA + BB) * (CC + DD) + TWO * PAB *
     2  PAC * (AA * DD - BB * CC) - PAB * (AA * BB - CC * DD) -
     3  PAC * (AA * CC - BB * DD)
      IF (SDR .LT. ZERO) SDR = ZERO
      SDR = SQRT(SDR) / (TOT * PDF * SQRT(TOT))
C
C        COMPUTE SDZERO
C
   85 SDZERO = SQRT((AA + BB) * (AA + CC) * (BB + DD) * (CC + DD) / TOT)
     * / (TOT ** 2 * SS)
      IF (R .EQ. ZERO) SDR = SDZERO
      GOTO 99
C
C        ERROR TERMINATIONS
C
   92 IFAULT = 1
   93 IFAULT = IFAULT + 1
C
   99 RETURN
      END

