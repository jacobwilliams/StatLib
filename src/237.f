      SUBROUTINE BGM(N, RHO, KMAX1, IWIND, TRUNC, TOLER, DELTA, TSTAT,
     *  CHSTAT, TSIGN, CHSIGN, MAXP, K, WKSP, LGTH, ISWCHI, ISWSGN,
     *  IFAULT)
C
C        ALGORITHM AS237  APPL. STATIST. (1988) VOL. 37, NO. 2
C
C        COMPUTES THE DELTA, T- AND CHI SQUARED-STATISTIC ARRAYS FOR THE
C        CORNER METHOD OF BEGUIN, GOURIEROUX AND MONFORT (IMPROVED)
C        SUBPROGRAMS : CEACMA, CALBGM, QFBGM, NORMAL(AS 2)
C
      DIMENSION DELTA(MAXP, K), TSTAT(MAXP, K), CHSTAT(MAXP, K)
      DIMENSION TSIGN(MAXP, K), CHSIGN(MAXP, K)
      DIMENSION RHO(KMAX1), WKSP(LGTH)
C
      REAL TRUNC, TOLER
      REAL EPS, TENTH
C
      DATA EPS, ETA, TENTH /1.0E-12, 1.0E-60, 0.1/
C
C        STORAGE MANAGEMENT AND ERROR DETECTION
C
      K2 = K + 2
      LCOVAR = (K + 1) * K / 2
      LWRHO = KMAX1
      LWLAM = 2 * KMAX1 - 1
      IWKSP1 = 1
      IWKSP2 = IWKSP1 + K2
      IWKSP3 = IWKSP2 + K2
      IWKSP4 = IWKSP3 + LCOVAR
      IWKSP5 = IWKSP4 + LWRHO
      IWKSP6 = IWKSP5 + LWLAM
      IWKSP7 = IWKSP6 + K2 * K
      IWKSP8 = IWKSP7 + K2 * K
      LWKSP = LGTH - (IWKSP8 - 1)
      IFAULT = 0
      IF (MAXP .LT. K) IFAULT = 6
      IF (ISWCHI .LT. (-1) .OR. ISWCHI .GT. 1) IFAULT = 7
      IF (ISWSGN .NE. 0 .AND. ISWSGN .NE. 1) IFAULT = 7
      IF (TOLER .GT. TENTH .OR. TOLER .LT. EPS) IFAULT = 8
      IF (LWKSP .LT. 3 * K2) IFAULT = 9
      IF (K .LE. 0) IFAULT = 1
      IF (IFAULT .NE. 0) RETURN
C
C        PRELIMINARIES
C
      CALL CEACMA(N, RHO, KMAX1, IWIND, TRUNC, WKSP(IWKSP4), LWRHO,
     *  WKSP(IWKSP5), LWLAM, WKSP(IWKSP3), LCOVAR, K, IFAULT)
      IF (IFAULT .NE. 0) RETURN
C
C        CALL TO COMPUTING SUBROUTINE
C
      CALL CALBGM(RHO, KMAX1, DELTA, TSTAT, CHSTAT, TSIGN, CHSIGN, MAXP,
     *  K, WKSP(IWKSP3), LCOVAR, WKSP(IWKSP1), WKSP(IWKSP2), K2,
     *  WKSP(IWKSP6), WKSP(IWKSP7), WKSP(IWKSP8), EPS, ETA, TOLER,
     *  ISWCHI, ISWSGN, IFAULT)
      RETURN
      END

      SUBROUTINE CEACMA(N, RHO, KMAX1, IWIND, TRUNC, WRHO, LWRHO, WLAM,
     *  LWLAM, COVAR, LCOVAR, K, IFAULT)
C
C        ALGORITHM AS237.1  APPL. STATIST. (1988) VOL. 37, NO. 2
C
C        COMPUTATION OF A CONSISTENT ESTIMATOR OF THE ASYMPTOTIC
C        COVARIANCE MATRIX OF THE FIRST K AUTOCORRELATION ESTIMATORS
C
      DIMENSION RHO(KMAX1), WRHO(LWRHO), WLAM(LWLAM), COVAR(LCOVAR)
C
      REAL TRUNC
      REAL ZERO, ONE, TWO, SIX, HALF
C
      DATA ZERO, ONE, TWO, SIX, HALF /0.0, 1.0, 2.0, 6.0, 0.5/
C
      FN = N
      IF (K .LE. 0) IFAULT = 1
      IF (IWIND .LT. 0 .OR. IWIND .GT. 2) IFAULT = 2
      IF (KMAX1 .LE. K) IFAULT = 3
      IF (TRUNC .LT. HALF .OR. TRUNC .GT. SIX) IFAULT = 4
      IF (N .LE. K) IFAULT = 5
      IF (LCOVAR .NE. (K + 1) * K / 2 .OR. LWRHO .NE. KMAX1 .OR.
     *  LWLAM .NE. 2 * KMAX1 - 1) IFAULT = 20
      IF (IFAULT .NE. 0) RETURN
C
C        COMPUTING WINDOWED AUTOCORRELATIONS WRHO
C
      BN = INT(SQRT(FN) * TRUNC)
      DO 100 MP1 = 1, LWRHO
      FACT = ONE
      IF (IWIND .EQ. 0) GOTO 90
      X = FLOAT(MP1 - 1) / BN
      FACT = ZERO
      IF (IWIND .EQ. 2) GOTO 20
      IF (X .LE. ONE) FACT = ONE - X
      GOTO 90
   20 IF (X .LE. HALF) FACT = ONE - SIX * X ** 2 * (ONE - X)
      IF (X .LE. ONE .AND. X .GT. HALF) FACT = TWO * (ONE - X) ** 3
   90 WRHO(MP1) = RHO(MP1) * FACT
  100 CONTINUE
C
C        COMPUTING WINDOWED LAMBDA
C
      DO 250 MP1 = 1, LWLAM
      WLAM(MP1) = ZERO
      NTERM = LWLAM - MP1 + 1
      DO 200 LP1 = 1, NTERM
      LABS = IABS(LP1 - LWRHO) + 1
      LPMABS = IABS(LP1 + MP1 - LWRHO - 1) + 1
      WLAM(MP1) = WLAM(MP1) + WRHO(LABS) * WRHO(LPMABS)
  200 CONTINUE
  250 CONTINUE
C
C        EVALUATING THE ASYMPTOTIC COVARIANCE MATRIX OF THE
C        AUTOCORRELATIONS
C
      IND = 0
      K1 = K + 1
      DO 300 M = 2, K1
      DO 300 L = M, K1
      LMM = L - M + 1
      LPM = L + M - 1
      IND = IND + 1
      COVAR(IND) = (WLAM(LMM) + WLAM(LPM) - (WRHO(M) * WLAM(L) + WRHO(L)
     *  * WLAM(M) - WRHO(M) * WRHO(L) * WLAM(1)) * TWO) / FN
  300 CONTINUE
      RETURN
      END

      SUBROUTINE CALBGM(RHO, KMAX1, DELTA, TSTAT, CHSTAT, TSIGN, CHSIGN,
     *  MAXP, K, COVAR, LCOVAR, DELTA0, DELTA1, K2, DERIV0, DERIV1,
     *  WKSP, EPS, ETA, TOLER, ISWCHI, ISWSGN, IFAULT)
C
C        ALGORITHM AS237.2  APPL. STATIST. (1988) VOL. 37, NO. 2
C
      DIMENSION RHO(KMAX1), WKSP(3, K2), COVAR(LCOVAR)
      DIMENSION DELTA(MAXP, K), TSTAT(MAXP, K), CHSTAT(MAXP, K)
      DIMENSION TSIGN(MAXP, K), CHSIGN(MAXP, K)
      DIMENSION DELTA0(K2), DELTA1(K2)
      DIMENSION DERIV0(K2, K), DERIV1(K2, K)
      DIMENSION CHI(1), P(1), Q(1), Z(1)
C
      LOGICAL ZDELTA
      REAL TOLER
      REAL EPS, ZERO, ONE, TWO, RT2PI
C
      DATA ZERO, ONE, TWO, RT2PI /0.0, 1.0, 2.0, 2.5066282746/
C
C        INITIALIZATION OF TWO LINES OF THE DELTA AND DERIV ARRAYS
C
      IFAIL1 = 0
      IFAIL2 = 0
      DO 440 IQ = 1, K2
      DELTA1(IQ) = ONE
      DO 420 M = 1, K
      DERIV0(IQ, M) = ZERO
      DERIV1(IQ, M) = ZERO
  420 CONTINUE
  440 CONTINUE
      DO 460 I2 = 1, K2
      IQ1 = IABS(I2 - 2) + 1
      DELTA0(I2) = RHO(IQ1)
      IF (I2 .NE. 2) DERIV0(I2, IQ1 - 1) = ONE
  460 CONTINUE
C
C        LOOP ON P (THE AR ORDER)
C
      DO 1000 IP = 1, K
      K3MP = K - IP + 3
C
C        LOOP ON IQ (THE MA ORDER) FOR COMPUTING A LINE OF DELTA
C        AND DERIV
C
      DO 900 I1 = 2, K3MP
      ZDELTA = ABS(DELTA0(I1))  .LT. ETA
      IF (IP .EQ. 1 .OR. ZDELTA) GOTO 600
      TEMP = (DELTA1(I1) ** 2 - DELTA1(I1 - 1) * DELTA1(I1 + 1))
     *  / DELTA0(I1)
      IF (ISWCHI .EQ. (-1)) GOTO 550
      DO 500 M = 1, K
      DERIV0(I1, M) = (TWO * DELTA1(I1) * DERIV1(I1, M) -
     *                 DELTA1(I1 - 1)   * DERIV1(I1 + 1, M) -
     *                 DELTA1(I1 + 1)   * DERIV1(I1 - 1, M) -
     *                 TEMP * DERIV0(I1, M)) / DELTA0(I1)
  500 CONTINUE
  550 DELTA0(I1) = TEMP
C
C        EVALUATING THE ASYMPTOTIC VARIANCE OF AN ELEMENT OF DELTA
C        AND THE COVARIANCES WITH THREE OTHER DELTA ELEMENTS
C
  600 IQ = I1 - 2
      IF (IQ .LT. 1) GOTO 900
      DELTA(IP, IQ) = DELTA0(I1)
      IF (ISWCHI .EQ. (-1)) GOTO 900
      TSTAT(IP, IQ) = ZERO
      IF (ISWSGN .EQ. 1) TSIGN(IP, IQ) = ONE
      IF (ZDELTA) GOTO 700
      VAR = ZERO
      IF (ISWCHI .EQ. 0) GOTO 610
      WKSP(2, IQ) = ZERO
      A31 = ZERO
      A32 = ZERO
  610 INDM = 0
      KMAX = IP + IQ - 1
      DO 640 M = 1, KMAX
      FACTOR = ONE
      IND = INDM
      DO 630 L = M, KMAX
      IND = IND + 1
      VAR = VAR + FACTOR * DERIV0(I1, M) * COVAR(IND) * DERIV0(I1, L)
      FACTOR = TWO
      IF (ISWCHI .EQ. 0) GOTO 630
      TEMPM = COVAR(IND) * DERIV0(I1, M)
      WKSP(2, IQ) = WKSP(2, IQ) + TEMPM * DERIV0(I1 - 1, L)
      IF (IP .EQ. 1) GOTO 620
      A31 = A31 + TEMPM * DERIV1(I1, L)
      A32 = A32 + TEMPM * DERIV1(I1 + 1, L)
  620 IF (L .EQ. M) GOTO 630
      TEMPL = COVAR(IND) * DERIV0(I1, L)
      WKSP(2, IQ) = WKSP(2, IQ) + TEMPL * DERIV0(I1 - 1, M)
      IF (IP .EQ. 1) GOTO 630
      A31 = A31 + TEMPL * DERIV1(I1, M)
      A32 = A32 + TEMPL * DERIV1(I1 + 1, M)
  630 CONTINUE
      INDM = INDM + K - M + 1
  640 CONTINUE
      IF (VAR .GT. ETA) GOTO 650
      IFAIL1 = 1
      GOTO 700
C
C        COMPUTING T-STATISTIC
C
  650 TSTAT(IP, IQ) = DELTA0(I1) / SQRT(VAR)
C
C        COMPUTING T-PROBABILITY OF SIGNIFICANCE
C
      IF (ISWSGN .EQ. 0) GOTO 700
      CALL NORMAL(TSTAT(IP, IQ), 1, P, Q, Z, IFLT)
      PQ = P(1)
      IF (Q(1) .LT. PQ) PQ = Q(1)
      TSIGN(IP, IQ) = TWO * PQ
C
C        COMPUTING CHI2-STATISTIC
C
  700 IF (ISWCHI .EQ. 0) GOTO 900
      CHSTAT(IP - 1, IQ) = ZERO
      IF (ISWSGN .EQ. 1) CHSIGN(IP - 1, IQ) = ONE
      IF (ZDELTA) GOTO 900
      WKSP(3, IQ) = VAR
      IF (IP .EQ. 1) GOTO 780
      CHSTAT(IP - 1, IQ) = QFBGM(WKSP(1, IQ), WKSP(2, IQ + 1),
     *  WKSP(3, IQ + 1), A31, A32, VAR, DELTA1(I1), DELTA1(I1 + 1),
     *  DELTA0(I1), ETA, TOLER, NDF)
      IF (NDF .GT. 0) GOTO 750
      IFAIL2 = 1
      GOTO 780
C
C        COMPUTING CHI2-PROBABILITY OF SIGNIFICANCE
C
  750 IF (ISWSGN .EQ. 0) GOTO 780
      CHI(1) = SQRT(CHSTAT(IP - 1, IQ) )
      CALL NORMAL(CHI, 1, P, Q, Z, IFLT)
      IF (NDF .EQ. 1) CHSIGN(IP - 1, IQ) = TWO * Q(1)
      IF (NDF .EQ. 2) CHSIGN(IP - 1, IQ) = RT2PI * Z(1)
      IF (NDF .EQ. 3) CHSIGN(IP - 1, IQ) = TWO * (Q(1) + Z(1) * CHI(1))
C
  780 WKSP(1, IQ) = VAR
  900 CONTINUE
C
C        UPDATE AUXILIARY ARRAYS
C
      DELTA0(1) = DELTA0(3)
      DO 920 M = 1, K
  920 DERIV0(1, M) = DERIV0(3, M)
      DO 980 I = 1, K3MP
      TEMP = DELTA1(I)
      DELTA1(I) = DELTA0(I)
      DELTA0(I) = TEMP
      DO 960 M = 1, K
      TEMP = DERIV1(I, M)
      DERIV1(I, M) = DERIV0(I, M)
      DERIV0(I, M) = TEMP
  960 CONTINUE
  980 CONTINUE
C
 1000 CONTINUE
C
      IFAULT = -(IFAIL1 + 2 * IFAIL2)
      IF (ZDELTA) IFAULT = -4
      RETURN
      END

      REAL FUNCTION QFBGM(A11, A21, A22, A31, A32, A33, V1, V2, V3, ETA,
     *  TOLER, NDF)
C
C        ALGORITHM AS237.3  APPL. STATIST. (1988) VOL. 37, NO. 2
C
C                                                  -1
C        COMPUTATION OF THE QUADRATIC FORM Q = V'.A  .V  WITH A 3X3
C        SYMMETRIC MATRIX 'A', BY USING A CHOLESKY DECOMPOSITION
C
      REAL TOLER
      REAL ETA, ZERO
C
      DATA ZERO /0.0/
      NDF = 0
      QFBGM = ZERO
      D11 = A11
      IF (D11 .LT. ETA) GOTO 30
      W1 = V1
      S21 = A21 / D11
      D22 = A22 - D11 * S21 ** 2
      IF (D22 .LT. ETA) GOTO 20
      T21 = -S21
      W2 = T21 * V1 + V2
      S31 = A31 / D11
      S32 = (A32 - D11 * S21 * S31) / D22
      D33 = A33 - D11 * S31 ** 2 - D22 * S32 ** 2
      IF (D33 .LT. ABS(TOLER * A33)) GOTO 10
      IF (D33 .LT. ETA) GOTO 10
      T31 = -S31 - S32 * T21
      T32 = -S32
      W3 = T31 * V1 + T32 * V2 + V3
      QFBGM = QFBGM + W3 ** 2 / D33
      NDF = NDF + 1
   10 IF (D22 .LT. ABS(TOLER * A22)) GOTO 20
      QFBGM = QFBGM + W2 ** 2 / D22
      NDF = NDF + 1
   20 IF (D11 .LT. ABS(TOLER * A11)) GOTO 30
      QFBGM = QFBGM + W1 ** 2 / D11
      NDF = NDF + 1
   30 CONTINUE
      RETURN
      END

      SUBROUTINE CORNER(TABLE, MAXP, LAG, LAG1, CRIT, MINP, MDLP, MDLQ,
     *  NB, IFAULT)
C
C        ALGORITHM AS237.4  APPL. STATIST. (1988) VOL. 37, NO. 2
C
C        DETECTS ALL THE CORNERS IN TABLE
C        (THE ABSOLUTE VALUE OF THE ELEMENTS OF TABLE COMPARED TO CRIT)
C
      DIMENSION TABLE(MAXP, LAG)
      REAL ONE, CRIT
      INTEGER MINP(LAG1), MDLP(LAG1), MDLQ(LAG1)
C
      DATA ONE /1.0/
C
      IFAULT = 0
      IF (MAXP .LT. LAG .OR. LAG .LE. 0) IFAULT = 12
      IF (LAG1 .NE. LAG + 1) IFAULT = 13
      NB = 0
      IF (IFAULT .NE. 0) RETURN
C
      IQ = 0
      DO 300 M = 1, LAG
      IP = LAG + 1 - M
      J = IQ + 1
      DO 100 L = J, M
      IQ = M + J - L
C
C        IF TABLE DOES NOT CONTAIN PROBABILITIES OF SIGNIFICANCE
C        BUT T OR CHI2 STATISTICS, REPLACE .LT. BY .GT. IN :
C
      IF (ABS(TABLE(IP, IQ)) .LT. CRIT) GOTO 300
  100 CONTINUE
  200 IQ = J - 1
  300 MINP(IP) = IQ
      MINP(LAG1) = 0
      IF (MINP(1) .EQ. 0) GOTO 500
      INDP = LAG1
      DO 400 M = 1, LAG1
      IF (MINP(M) .EQ. INDP) GOTO 400
      NB = NB + 1
      MDLP(NB) = M - 1
      MDLQ(NB) = MINP(M)
      INDP = MINP(M)
  400 CONTINUE
  500 RETURN
      END
