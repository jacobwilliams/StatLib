      SUBROUTINE KKEY(IDATA,ICLSS,ILCSE,ILSYM,ISMSB,NCASE,NCLAS,NSCOR,
     1      NSYM,ISIG,NUM,NKEY,MAXLEV,NPRINT,NPUNCH,IFAULT)
C
C<<<<<  Acquired in machine-readable form from 'Applied Statistics'
C<<<<<  algorithms editor, January 1983.
C
C        ALGORITHM AS 165  APPL. STATIST. (1981) VOL.30, NO.3
C
C        Constructs a discriminant function in Fortran for categorical data.
C
      DIMENSION IDATA(NSYM,NCASE),ICLSS(NCASE),ILCSE(NCASE),
     1          ILSYM(3,NKEY),ISMSB(NSYM)
      DIMENSION ITABL(10,10),MTAB(10,10),IFST(10),IT(10),ITERM(10),
     1          ITMIN(10),MEST(10),MINC(10),MSC(10),NOC(10)
      DATA ITWO/1/
C
C        CHECK INPUT VALUES
C
      IF(NCASE.LT.3) GO TO 52
      IF(NSYM.LT.3) GO TO 53
      IF(NSCOR.LT.2 .OR. NSCOR.GT.10) GO TO 54
      IF(NCLAS.LT.2 .OR. NCLAS.GT.10) GO TO 55
      DO 1 J = 1,NCASE
      IF(ICLSS(J).LT.1 .OR. ICLSS(J).GT.NCLAS) GO TO 56
      DO 1 I = 1,NSYM
      IF(IDATA(I,J).LT.0 .OR. IDATA(I,J).GE.NSCOR) GO TO 57
 1    CONTINUE
      IF(ISIG.LT.0 .OR. ISIG.GT.2) GO TO 58
      IF(NPRINT.LT.1 .OR. NPUNCH.LT.1) GO TO 59
C
C        CONSTRUCT KEY AND WRITE FORTRAN FUNCTION
C
C        INDIVIDUAL LABELS STORED IN ILCSE - INITIALISE TO ONES
C
      IFAULT = 0
      IFLAG = 2
      LEVEL = 1
      LEV10 = 10
      ILSYM(3,1) = 0
      ILSYM(3,2) = 1
      DO 2 I = 1,NCASE
 2    ILCSE(I) = 1
      DO 3 I = 1,NCLAS
 3    ITERM(I) = 1
      WRITE(NPUNCH,80)NSYM
C
C        VARIABLE LABELS STORED IN ILSYM - NSYMU GIVES NUMBER STORED
C
      NSYMU = 0
C
C        NEW LEVEL
C        LABEL IS CURRENT INDIVIDUAL LABEL - LABNO GIVES FIRST
C         INDIVIDUAL FOR INSPECTION
C
 4    LABEL = -1
      LABNO = 1
C
C        TAKE NEXT INDIVIDUAL LABEL - SAME LEVEL
C
 5    DO 6 I = LABNO,NCASE
C
C        IF INDIVIDUAL LABEL NEGATIVE MOVE ON
C
      IF(ILCSE(I).GT.0) GO TO 7
 6    CONTINUE
C
C        NO POSITIVE INDIVIDUAL LABELS - END OF KEY
C
      GO TO 50
C
C        FIND NEXT INDIVIDUAL LABEL IGNORING INDIVIDUALS ALREADY
C        PROCESSED AT THIS LEVEL
C
 7    DO 8 J = I,NCASE
      IF(ILCSE(J).LT.LEV10.AND.ILCSE(J).GE.0) GO TO 9
 8    CONTINUE
C
C        ALL INDIVIDUALS DONE - GO ON TO NEXT LEVEL IF ANY VARIABLES
C        LEFT - OTHERWISE END KEY
C
      LEVEL = LEVEL+1
      LEV10 = LEV10*10
      IF(LEVEL.GT.NSYM ) GO TO 49
      GO TO 4
C
C        TEST WHETHER VARIABLE HAS BEEN USED ON THESE INDIVIDUALS
C        PICK OUT VARIABLES THAT MATCH THE INDIVIDUAL LABEL OR THE
C        FIRST N DIGITS OF IT
C        THESE VARIABLES HAVE 1 PLACED IN ISMSB - OTHERS HAVE ZERO.
C
 9    LABEL = ILCSE(J)
      LABNO = J
      DO 10 I = 1,NSYM
 10   ISMSB(I) = 0
      IF(NSYMU.EQ.0) GO TO 13
      LAB = LABEL
      DO12 I = 1,LEVEL
      DO 11 J = 1,NSYMU
      ISM = ILSYM(1,J)
      IF(ILSYM(2,J).EQ.LAB)ISMSB(ISM) = 1
 11   CONTINUE
      IF(LEVEL.NE.I)LAB = LABEL/10
 12   CONTINUE
C
C        FIND THE VARIABLE OF THE SUBSET THAT IS MOST DISCRIMINATING
C        FOR THESE INDIVIDUALS
C
 13   MAXP = 0
      DO 16 I = 1,NSYM
      IF(ISMSB(I).EQ.1) GO TO 16
      CALL IPOWR(I,LABEL,IP,IT,MSC,NOC,ITABL,IDATA,ICLSS,ILCSE,NCASE,
     1      NCLAS,NSCOR,NSYM,IFAULT)
      IF(IFAULT.NE.0) RETURN
      IF(IP.LE.MAXP) GO TO 16
      MAXP = IP
      IPN = I
      DO 15 J = 1,10
      MEST(J) = MSC(J)
      MINC(J) = NOC(J)
      ITMIN(J) = IT(J)
      DO 15 J1 = 1,10
      MTAB(J1,J) = ITABL(J1,J)
 15   CONTINUE
 16   CONTINUE
C
C        APPLY ERROR-RATE STOP RULE
C
      MAXV = 0
      DO 20 L = 1,NCLAS
      IT(L) = 0
      DO 17 M = 1,NSCOR
 17   IT(L) = IT(L)+MTAB(L,M)
      IF(IT(L)-MAXV)20,18,19
 18   ITWO = 3-ITWO
      IF(ITWO.EQ.2) GO TO 20
 19   MAXV = IT(L)
      MCLAS = L
 20   CONTINUE
      NMIN = 0
      DO 21 L = 1,NSCOR
 21   NMIN = NMIN+MINC(L)
      IIP = IT(MCLAS)
      IF(MAXP - IIP.GE.NUM) GO TO 27
      WRITE(NPRINT,91)
      GO TO 28
C
C        TEST FOR SIGNIFICANCE FOR ADDITION OF VARIABLE TO KEY
C
 27   IF(LEVEL-1.GE.MAXLEV) GO TO 35
      CALL TRUNC(MTAB,NO,IFAULT)
      IF(IFAULT.EQ.1)RETURN
      IF(NO + ISIG.LT.3) GO TO 36
      IFAULT = 0
      WRITE(NPRINT,92)
C
C        STOP THAT BRANCH
C
 28   IIP = NMIN-IIP
      WRITE(NPRINT,95)LABEL,MCLAS,NMIN,IIP
      DO 30 II = 1,IFLAG
      IF(ILSYM(3,II).EQ.LABEL) GO TO 31
 30   CONTINUE
 31   IF(ITERM(MCLAS).EQ.1) GO TO 32
      WRITE(NPUNCH,85)II,ITERM(MCLAS)
      GO TO 33
 32   ITERM(MCLAS) = II
      WRITE(NPUNCH,81)II,MCLAS
 33   DO 34 II = LABNO,NCASE
 34   IF(ILCSE(II).EQ.LABEL) ILCSE(II) = -MCLAS
      GO TO 48
C
C        MAXIMUM LEVELS REACHED
C
 35   WRITE(NPRINT,93)
      GO TO 28
C
C        WRITE BRANCH STATEMENT
C
 36   WRITE(NPRINT,96)LABEL,IPN,NMIN
      DO 37 II = 1,IFLAG
      IF(ILSYM(3,II).EQ.LABEL) GO TO 38
 37   CONTINUE
 38   DO 41 J = 1,10
 41   IFST(J) = 1
      WRITE(NPUNCH,82)II,IPN
      DO 43 J = 1,NSCOR
      J1 = J-1
      IF(MINC(J).EQ.0) GO TO 43
      WRITE(NPRINT,97)J1,LABEL,J1,ITMIN(J)
      IFLAG = IFLAG+1
      IF(IFLAG.GT.NKEY) GO TO 60
      ILSYM(3,IFLAG) = LABEL*10+J1
      IFST(J) = IFLAG
 43   CONTINUE
      WRITE(NPUNCH,83)IFST
C
C        WRITE BRANCH TERMINAL  IE.  CLASS  = 
C
      DO 46 J = 1,NSCOR
      IF(MINC(J).EQ.0 .OR. ITMIN(J).GT.0) GO TO 46
      LAB = LABEL*10+J-1
      WRITE(NPRINT,95)LAB,MEST(J),MINC(J),ITMIN(J)
      MEJ = MEST(J)
      IMJ = ITERM(MEJ)
      IF(IMJ.EQ.1) GO TO 44
      WRITE(NPUNCH,85)IFST(J),IMJ
      GO TO 46
 44   ITERM(MEJ) = IFST(J)
      WRITE(NPUNCH,81)IFST(J),MEST(J)
 46   CONTINUE
C
C        LABEL THE VARIABLE, CREATING NEW ROW IN ILSYM
C
      NSYMU = NSYMU+1
      IF(NSYMU.GT.NKEY) GO TO 61
      ILSYM(1,NSYMU) = IPN
      ILSYM(2,NSYMU) = LABEL
C
C        ADD A DIGIT TO INDIVIDUAL LABEL
C
      DO 47 I = LABNO,NCASE
      IF(ILCSE(I).NE.LABEL) GO TO 47
      IDA = IDATA(IPN,I) +1
      LAB = ILCSE(I)*10+IDA-1
      IF(ITMIN(IDA).EQ.0) LAB = -MEST(IDA)
      ILCSE(I) = LAB
 47   CONTINUE
 48   LABNO = LABNO+1
      IF(LABNO.LE.NCASE) GO TO 5
      LEVEL = LEVEL+1
      LEV10 = LEV10*10
      IF(LEVEL.LE.NSYM ) GO TO 4
C
C        TERMINATE PROCEDURE - SUCCESSFUL RETURN
C
 49   WRITE(NPRINT,94)
 50   LREJ = NCLAS+1
      DO 51 I = 1,NCASE
      ILCSE(I) = -ILCSE(I)
 51   CONTINUE
      WRITE(NPUNCH,84)LREJ
      RETURN
C
C        FAULT RETURNS
C
 52   IFAULT = 6
      RETURN
 53   IFAULT = 7
      RETURN
 54   IFAULT = 8
      RETURN
 55   IFAULT = 9
      RETURN
 56   IFAULT = 10
      RETURN
 57   IFAULT = 11
      RETURN
 58   IFAULT = 12
      RETURN
 59   IFAULT = 13
      RETURN
 60   IFAULT = 14
      RETURN
 61   IFAULT = 15
      RETURN
C
C        FORMATS FOR PUNCHED CARD OUTPUT
C
 80   FORMAT(6X,21H FUNCTION ICLAS(ISYM)/6X,16H DIMENSION ISYM(,I5,2H ))
 81   FORMAT(1X,I4,1X,7H ICLAS = ,I2/6X,7H RETURN)
 82   FORMAT(1X,I4,1X,8H I = ISYM(,I3,3H)+1)
 83   FORMAT(6X,8H GO TO (,9(I3,1H,),I3,3H),I)
 84   FORMAT(3X,2H 1,2X,6HICLAS = ,I2/6X,7H RETURN/6X,4H END)
 85   FORMAT(1X,I4,1X,7H GO TO ,I3)
C
C        FORMATS FOR PRINTED OUTPUT
C
 91   FORMAT(1H0,47X,61H * REMAINING VARIABLES DO NOT SUFFICIENTLY IMPRO
     1VE ERROR RATE)
 92   FORMAT(1H0,47X,38H * REMAINING VARIABLES NOT SIGNIFICANT)
 93   FORMAT(1H0,47X,34H * SPECIFIED MAXIMUM LEVEL REACHED)
 94   FORMAT(1H0,47X,31H * ALL VARIABLES HAVE BEEN USED)
 95   FORMAT(1H ,I8,7H CLASS = ,I2,30X,26H * THIS RULE DERIVED USING,I4,
     113H INDIVIDUALS.,I6)
 96   FORMAT(1H0,I8,13H IF VARIABLE ,I3,9H SCORES -,14X,26H * THIS RULE
     1DERIVED USING,I4,20H INDIVIDUALS. ERRORS)
 97   FORMAT(32X,I1,6H GO TO,I7,I1,2X,1H*,43X,I4)
      END
C
      SUBROUTINE IPOWR(I,J,IP,IT,MAXSC,NOC,ITABL,IDATA,ICLSS,ILCSE,NCASE
     1,NCLAS,NSCOR,NSYM,IFAULT)
C
C        ALGORITHM AS 165.1  APPL. STATIST. (1981) VOL.30, NO.3
C
C        COMPUTE DISCRIMINATING POWER, IP, OF VARIABLE I FOR A SUBSET OF THE
C        DATA DEFINED BY INDIVIDUAL LABEL J.
C
      DIMENSION IDATA(NSYM,NCASE),ICLSS(NCASE),ILCSE(NCASE)
      DIMENSION ITABL(10,10),IT(10),MAXSC(10),NOC(10)
      DATA ITWO/1/
C
C        CHECK INPUT VALUES
C
      IF(I.GT.NSYM .OR. I.LT.1) GO TO 9
      IF(NCASE.LT.3) GO TO 10
      IF(NSYM.LT.3) GO TO 11
      IF(NSCOR.LT.2 .OR. NSCOR.GT.10) GO TO 12
      IF(NCLAS.LT.2 .OR. NCLAS.GT.10) GO TO 13
      DO 1 L = 1,NCASE
      IF(ICLSS(L).LT.1 .OR. ICLSS(L).GT.NCLAS) GO TO 14
      IF(IDATA(I,L).LT.0 .OR. IDATA(I,L).GE.NSCOR) GO TO 15
 1    CONTINUE
C
C        TABULATE CLASS BY VARIABLE SCORE FOR THE APPROPRIATE
C        SUBSET OF THE DATA
C
      DO 2 L = 1,10
      DO 2 M = 1,10
 2    ITABL(L,M) = 0
      DO 3 L = 1,NCASE
      IF(ILCSE(L).NE.J) GO TO 3
      IND = IDATA(I,L)+1
      ICS = ICLSS(L)
      ITABL(ICS,IND) = ITABL(ICS,IND)+1
 3    CONTINUE
      IP = 0
      DO 8 L = 1,NSCOR
      MAX = 1
      NOC(L) = ITABL(1,L)
      DO 7 M = 2,NCLAS
      NOC(L) = NOC(L)+ITABL(M,L)
      IF(ITABL(MAX,L)-ITABL(M,L))5,4,7
 4    ITWO = 3-ITWO
      IF(ITWO.EQ.2) GO TO 7
 5    MAX = M
 7    CONTINUE
      IT(L) = NOC(L) - ITABL(MAX,L)
      MAXSC(L) = MAX
      IP = IP+ITABL(MAX,L)
 8    CONTINUE
      IFAULT = 0
      RETURN
C
C        FAULT RETURNS
C
 9    IFAULT = 5
      RETURN
 10   IFAULT = 6
      RETURN
 11   IFAULT = 7
      RETURN
 12   IFAULT = 8
      RETURN
 13   IFAULT = 9
      RETURN
 14   IFAULT = 10
      RETURN
 15   IFAULT = 11
      RETURN
      END
C
      SUBROUTINE TRUNC(ITABL,NO,IFAULT)
C
C        ALGORITHM AS 165.2  APPL. STATIST. (1981) VOL.30, NO.3
C
      DIMENSION CRIT(36,2),ITABL(10,10),IRT(10),ICT(10)
      DATA CRIT(1,1),CRIT(2,1),CRIT(3,1),CRIT(4,1),CRIT(5,1),CRIT(6,1),
     1CRIT( 7,1),CRIT( 8,1),CRIT( 9,1),CRIT(10,1),CRIT(11,1),CRIT(12,1),
     1CRIT(13,1),CRIT(14,1),CRIT(15,1),CRIT(16,1),CRIT(17,1),CRIT(18,1),
     1CRIT(19,1),CRIT(20,1),CRIT(21,1),CRIT(22,1),CRIT(23,1),CRIT(24,1),
     1CRIT(25,1),CRIT(26,1),CRIT(27,1),CRIT(28,1),CRIT(29,1),CRIT(30,1),
     1CRIT(31,1),CRIT(32,1),CRIT(33,1),CRIT(34,1),CRIT(35,1),CRIT(36,1)/
     1      3.84,      5.99,      7.81,      9.49,     11.07,     12.59,
     1     14.07,     15.51,     16.92,     18.31,     19.68,     21.03,
     1     22.36,     23.68,     25.00,     26.30,     27.59,     28.87,
     1     30.14,     31.41,     32.67,     33.92,     35.17,     36.42,
     1     37.65,     38.89,     40.11,     41.34,     42.56,     43.77,
     1     55.76,     67.50,     79.08,     90.53,    101.9 ,    113.1/
      DATA CRIT(1,2),
     1CRIT( 2,2),CRIT( 3,2),CRIT( 4,2),CRIT( 5,2),CRIT( 6,2),CRIT( 7,2),
     1CRIT( 8,2),CRIT( 9,2),CRIT(10,2),CRIT(11,2),CRIT(12,2),CRIT(13,2),
     1CRIT(14,2),CRIT(15,2),CRIT(16,2),CRIT(17,2),CRIT(18,2),CRIT(19,2),
     1CRIT(20,2),CRIT(21,2),CRIT(22,2),CRIT(23,2),CRIT(24,2),CRIT(25,2),
     1CRIT(26,2),CRIT(27,2),CRIT(28,2),CRIT(29,2),CRIT(30,2),CRIT(31,2),
     1CRIT(32,2),CRIT(33,2),CRIT(34,2),CRIT(35,2),CRIT(36,2)/
     16.63, 9.21,     11.34,     13.28,     15.09,     16.81,     18.48,
     1     20.09,     21.67,     23.21,     24.73,     26.22,     27.69,
     1     29.14,     30.58,     32.00,     33.41,     34.81,     36.19,
     1     37.57,     38.93,     40.29,     41.64,     42.98,     44.31,
     1     45.64,     46.96,     48.28,     49.59,     50.89,     63.69,
     1     76.15,     88.38,    100.4 ,    112.3 ,    124.1/
      NO = 0
      IFAULT = 0
C
C        COMPUTE ROW AND COLUMN TOTALS, NOTING EMPTY ROWS AND COLUMNS
C
      NROWS = 0
      DO 2 I = 1,10
      IR = 0
      DO 1 J = 1,10
      IF(ITABL(I,J).LT.0) GO TO 13
      IR = IR+ITABL(I,J)
 1    CONTINUE
      IF(IR.GT.0)NROWS = NROWS+1
      IRT(I) = IR
 2    CONTINUE
      IF(NROWS.LT.2) GO TO 15
      NCOLS = 0
      DO 4 I = 1,10
      IC = 0
      DO 3 J = 1,10
      IC = IC+ITABL(J,I)
 3    CONTINUE
      IF(IC.GT.0)NCOLS = NCOLS+1
      ICT(I) = IC
 4    CONTINUE
      IF(NCOLS.LT.2) GO TO 16
      IGT = 0
      DO 5 I = 1,10
 5    IGT = IGT+IRT(I)
      IF(IGT.EQ.0) GO TO 14
C
C        COMPUTE G STATISTIC (LIKELIHOOD RATIO TEST)
C
      G = 0.0
      DO 8 J = 1,10
      IF(ICT(J).EQ.0) GO TO 8
      FAC = FLOAT(IGT)/FLOAT(ICT(J))
      DO 7 I = 1,10
      IF(IRT(I).EQ.0) GO TO 7
      IJOBS = ITABL(I,J)
      IF(IJOBS.EQ.0) GO TO 7
      OBSIJ = FLOAT(IJOBS)
      AL = OBSIJ*FAC/FLOAT(IRT(I))
      G = G + OBSIJ*ALOG(AL)
 7    CONTINUE
 8    CONTINUE
      G = 2.0*G
      NDF = (NROWS - 1)*(NCOLS - 1)
C
C        COMPARE G WITH TABLE OF CRITICAL VALUES OF CHI-SQUARE,
C        OR INTERPOLATE
C
      IF(NDF.LE.30) GO TO 11
      NC = NDF/10
      NCRITL = NC*10
      IF(NCRITL.EQ.NDF) GO TO 10
      CL1 = CRIT(NC+27,1)
      CL2 = CRIT(NC+27,2)
      CH1 = CRIT(NC+28,1)
      CH2 = CRIT(NC+28,2)
      F = FLOAT(NDF - NCRITL)/10.0
      CRIT1 = CL1 + (CH1 - CL1)*F
      CRIT2 = CL2 + (CH2 - CL2)*F
      GO TO 12
 10   NDF = NC+27
 11   CRIT1 = CRIT(NDF,1)
      CRIT2 = CRIT(NDF,2)
 12   IF(G.LT.CRIT2)NO = 1
      IF(G.LT.CRIT1)NO = 2
      RETURN
C
C        FAULT RETURNS
C
 13   IFAULT = 1
      RETURN
 14   IFAULT = 2
      RETURN
 15   IFAULT = 3
      RETURN
 16   IFAULT = 4
      RETURN
      END
