      SUBROUTINE GIVENC(R, IR, NVARS, X, V, IFAULT)
C
C<<<<<  Acquired in machine-readable form from 'Applied Statistics'
C<<<<<  algorithms editor, January 1983.
C
C        ALGORITHM AS 164  APPL. STATIST. (1981) VOL.30, NO.2
C
C         APPLIES GIVENS TRANSFORMS TO INCLUDE A NEW ROW OF DATA
C         OR CONSTRAINT
C
C         The corrections detailed on p.357 of 'Applied Statistics', Vol.30,
C         have been incorporated.
C
      REAL R(IR), X(NVARS)
      DATA ZERO/0.0/
C
C         SMALL CONSTANTS THAT THE USER CAN MODIFY
C
      DATA EPS0/0.0/, EPS1/0.0/
C
C         CHECK FOR VALID PARAMETERS
C
      IFAULT = 0
      IRUSED = NVARS*(NVARS+1)/2
      IF (IR.LT.IRUSED) GO TO 1003
      IF (V.LT.ZERO) GO TO 1002
      VLOCAL = V
C
C         FOR EACH ROW OF UPPER TRIANGULAR R
C
      II = 0
      DO 60 I = 1, NVARS
	II = II + I
	XI = X(I)
	XI2 = XI*XI
	IF (XI2.LE.ABS(VLOCAL)*EPS0) GO TO 60
	CTEMP = R(II)
	IJ = II
	IPLUS = I + 1
C
C         IF ZERO WEIGHT ON ROW OF R, SIMPLE PIVOT
C
	IF (CTEMP.GE.ZERO) GO TO 20
	R(II) = VLOCAL/XI2
	IF (I.EQ.NVARS) GO TO 70
	DO 10 J = IPLUS, NVARS
	  IJ = IJ + J - 1
	  R(IJ) = X(J)/XI
   10   CONTINUE
	RETURN
C
C         IF INFINITE WEIGHT ON ROW OF R, SIMPLE PIVOT
C
   20   IF (CTEMP.GT.EPS1) GO TO 40
	DO 30 J = IPLUS, NVARS
	  IJ = IJ + J - 1
	  X(J) = X(J) - XI*R(IJ)
   30   CONTINUE
	GO TO 60
C
C         OTHERWISE ORDINARY GIVENS ROTATION
C
   40   VNEW = VLOCAL + CTEMP*XI2
	C = VLOCAL/VNEW
	S = CTEMP*XI/VNEW
	VLOCAL = VNEW
	R(II) = CTEMP*C
	IF (I.EQ.NVARS) GO TO 70
	DO 50 J = IPLUS, NVARS
	  IJ = IJ + J - 1
	  RTEMP = C*R(IJ) + S*X(J)
	  X(J) = X(J) - XI*R(IJ)
	  R(IJ) = RTEMP
   50   CONTINUE
C
   60 CONTINUE
C
C         CHECK FOR INCONSISTENT OR DUPLICATED CONSTRAINTS
C
   70 IF (ABS(R(IRUSED)).LE.EPS1) GO TO 1001
      IF (VLOCAL.LE.EPS1) IFAULT = -1
      RETURN
C
C         ERROR FLAG SET
C
 1001 IFAULT = IFAULT + 1
 1002 IFAULT = IFAULT + 1
 1003 IFAULT = IFAULT + 1
      RETURN
      END
C
      SUBROUTINE BSUB(R, IR, IDEP, COEFF, IC, IFAULT)
C
C        ALGORITHM AS 164.1  APPL. STATIST. (1981) VOL.30, NO.2
C
C         PERFORM BACK SUBSTITUTION TO GET PARAMETER ESTIMATES
C
      REAL R(IR), COEFF(IC)
      DATA ZERO/0.0/
C
C         CHECK FOR VALID PARAMETERS
C
      IFAULT = 0
      II = IDEP*(IDEP+1)/2
      NXVARS = IDEP - 1
      IF (IR.LT.II.OR.IC.LT.NXVARS) GO TO 1001
      IF (NXVARS.LT.1) RETURN
C
C         BACK SUBSTITUTION
C
      K = II
      NX = IDEP
      DO 30 I = 1, NXVARS
	II = II - NX
	K = K - 1
	TEMP = R(K)
	IF (R(II).LT.ZERO) IFAULT = IFAULT - 1
	IF (I.EQ.1) GO TO 20
	IJ = II
	DO 10 J = NX, NXVARS
	  IJ = IJ + J - 1
	  TEMP = TEMP - R(IJ)*COEFF(J)
   10   CONTINUE
   20   NX = NX - 1
	COEFF(NX) = TEMP
   30 CONTINUE
      RETURN
C
 1001 IFAULT = 1
      RETURN
      END
C
      SUBROUTINE SSCOMP(R, IR, IDEP, NOBS, ICOMP, SSQ, IDF, IFAULT)
C
C        ALGORITHM AS 164.2  APPL. STATIST. (1981) VOL.30, NO.2
C
C         FINDS (ICOMP)TH COMPONENT OF TOTAL SUM OF SQRS
C         ZERO-TH COMPONENT IS RESIDUAL SSQ
C
      DIMENSION R(IR)
      DATA ZERO/0.0/, ONE/1.0/
C
C         SMALL CONSTANT THAT THE USER CAN MODIFY
C
      DATA EPS1/0.0/
C
C         CHECK FOR VALID PARAMETERS
C
      IFAULT = 0
      IRUSED = IDEP*(IDEP + 1)/2
      IF (IR.LT.IRUSED) IFAULT = IFAULT + 1
      IF (ICOMP.LT.0.OR.ICOMP.GE.IDEP) IFAULT = IFAULT + 2
      IF (IFAULT.GT.0) RETURN
C
C         TEST IF RESIDUAL SSQ REQUIRED
C
      IF (ICOMP.GE.1) GO TO 20
      NXVARS = IDEP - 1
      IDF = NOBS - NXVARS
      II = 0
      DO 10 I = 1, NXVARS
	II = II + I
	IF (R(II).LE.EPS1) IDF = IDF + 1
   10 CONTINUE
      SSQ = ZERO
      IF (R(IRUSED).GT.EPS1) SSQ = ONE/R(IRUSED)
      RETURN
C
C         ORDINARY COMPONENT
C
   20 IDF = 0
      SSQ = ZERO
      II = ICOMP*(ICOMP+1)/2
      IF (R(II).LE.EPS1) RETURN
      IDF = 1
      IJ = IRUSED - IDEP + ICOMP
      SSQ = R(IJ)*R(IJ)/R(II)
      RETURN
      END
C
      SUBROUTINE VAR(R, IR, S, IS, IDEP, NOBS, IFAULT)
C
C        ALGORITHM AS 164.3  APPL. STATIST. (1981) VOL.30, NO.2
C
C         FINDS ESTIMATE OF VAR/COVAR MATRIX OF ESTIMATES
C
      REAL R(IR), S(IS)
      DATA ZERO/0.0/, ONE/1.0/
C
C         SMALL CONSTANT THAT THE USER CAN MODIFY
C
      DATA EPS1/0.0/
C
C         CHECK FOR VALID PARAMETERS
C
      IFAULT = 0
      IRUSED = IDEP*(IDEP+1)/2
      IF (IR.LT.IRUSED.OR.IS.LT.(IRUSED-IDEP)) GO TO 1002
      NXVARS = IDEP - 1
C
C         INVERT UNIT UPPER TRIANGULAR MATRIX
C
      NCONS = 0
      IJ = 0
      DO 50 I = 1, NXVARS
	JJ = 0
	J = 0
   10   J = J + 1
	IJ = IJ + 1
	JJ = JJ + J
	IF (J.LT.I) GO TO 20
	IF (R(IJ).LE.EPS1) NCONS = NCONS + 1
	GO TO 50
   20   STEMP = -R(IJ)
	IK = IJ
	KJ = JJ
	KMAX = I - 1
	KMIN = J + 1
	IF (KMAX.LT.KMIN) GO TO 40
	DO 30 K = KMIN, KMAX
	  IK = IK + 1
	  KJ = KJ + K - 1
	  STEMP = STEMP - R(IK)*S(KJ)
   30   CONTINUE
   40   S(IJ) = STEMP
	GO TO 10
   50 CONTINUE
C
C         ESTIMATE VARIANCE AND APPLY IDENTIFIABILITY CONSTRAINTS
C
      IDF = NOBS - NXVARS + NCONS
      IF (IDF.LE.0) GO TO 1001
      SIGMA = ZERO
      IF (R(IRUSED).GT.ZERO) SIGMA = ONE/(R(IRUSED)*FLOAT(IDF))
      II = 0
      DO 60 I = 1, NXVARS
	II = II + I
	S(II) = SIGMA*R(II)
	IF (R(II).LT.ZERO) S(II) = ZERO
   60 CONTINUE
C
C         MULTIPLY MATRICES TOGETHER TO FORM EST OF VAR
C
      II = 0
      IJ = 0
      DO 90 I = 1, NXVARS
	II = II + I
	DO 90 J = 1, I
	  KK = II
	  IJ = IJ + 1
	  KI = IJ
	  KJ = II
	  STEMP = S(KK)
	  IF (I.NE.J) STEMP = STEMP*S(IJ)
	  K = I
   70     K = K + 1
	  IF (K.GT.NXVARS) GO TO 80
	  KK = KK + K
	  KI = KI + K - 1
	  KJ = KJ + K - 1
	  STEMP = STEMP + S(KI)*S(KJ)*S(KK)
	  GO TO 70
C
   80     S(IJ) = STEMP
   90 CONTINUE
      RETURN
C
 1001 IFAULT = IFAULT + 1
 1002 IFAULT = IFAULT + 1
      RETURN
      END
C
      SUBROUTINE ALIAS(R, IR, NVARS, EPS, WORKSP, IFAULT)
C
C        ALGORITHM AS 164.4  APPL. STATIST. (1981) VOL.30, NO.2
C
C        ASSUMES ANY DIAGONAL ELEMENTS OF D LESS THAN EPS ARE
C        ROUNDING ERRORS AND REDUCES THEM TO ZERO
C
      REAL R(IR), WORKSP(NVARS)
      DATA ZERO/0.0/, ONE/1.0/, ONENEG/-1.0/
C
C         CHECK FOR VALID PARAMETERS
C
      IFAULT = 0
      IRUSED = NVARS*(NVARS+1)/2
      IF (IR.LT.IRUSED) GO TO 1001
      NXVARS = NVARS - 1
C
C         FOR EACH ROW OF TRIANGULAR R
C
      II = 0
      DO 20 I = 1, NXVARS
	II = II + I
	WORKSP(I) = ZERO
C
C         CHECK FOR WEIGHT OF ROW NEAR ZERO
C
	IF (ABS(R(II))*EPS.LE.ONE) GO TO 20
	IFAULT = IFAULT - 1
	V = R(II)
	R(II) = ONENEG
	IJ = II
	IPLUS = I + 1
C
C         ROTATE MODIFIED ROW WITH GIVENS
C
	DO 10 J = IPLUS, NVARS
	  IJ = IJ + J - 1
	  WORKSP(J) = R(IJ)
	  R(IJ) = ZERO
   10   CONTINUE
	CALL GIVENC(R, IR, NVARS, WORKSP, V, IFAIL)
   20 CONTINUE
      RETURN
C
C         SET FAULT INDICATOR
C
 1001 IFAULT = 1
      RETURN
      END
