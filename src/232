      SUBROUTINE XCOVAR(K, P, Q, R, LMAX, KKRP1, PHI, THETA, SIGMA,
     *  GAMMA, PSI, C, W, W1, IFAULT)
C
C        ALGORITHM AS232 APPL. STATIST. (1988) VOL. 37, NO. 1
C
      INTEGER P, Q, R, S, ZROW, SMI, RP1, RML
      LOGICAL POS, NEG, PZERO
      DIMENSION PHI(K, K, 0:R), THETA(K, K, 0:R), PSI(K, K, 0:LMAX),
     *  GAMMA(K, K, 0:LMAX), C(KKRP1, KKRP1), SIGMA(K, K), W(K, K),
     *  W1(K, K)
C
C        THE NEXT LINE IS THE STATEMENT FUNCTION GIVING THE MAPPING
C        USED FOR THE NUMBERING OF THE GAMMA(I,J,L) ELEMENTS IN THE
C        S.L.E. SYSTEM.  C*Z=B  (SEE EQUATIONS (1A) IN THE DESCRIPTION).
C        NOTE THAT IT TAKES THEM IN THE STORAGE ORDER FOR 3-D ARRAYS.
C
      ZROW(I, J, L, K) = (L * K + J - 1) * K + I
C
      IFAULT = 0
      IF (R .EQ. MAX0(P, Q)) GOTO 10
      IFAULT = -1
      RETURN
   10 RP1 = R + 1
      IF (KKRP1 .EQ. K * K * RP1) GOTO 20
      IFAULT = -2
      RETURN
   20 PZERO = P .EQ. 0
C
C        ZEROISE PLANES OF PHI,THETA BEYOND THE INPUT PLANES (IF ANY).
C
      IF (P .EQ. Q) GOTO 30
C
C        NONE IN THIS CASE.
C
      IF (R .EQ. Q) CALL LINZER(PHI(1, 1, P + 1), K * K * (R - P))
      IF (R .EQ. P) CALL LINZER(THETA(1, 1, Q + 1), K * K * (R - Q))
C
C        NEXT, FORM THE PSI-MATRICES, UP TO THE LMAX'TH.
C        NOTE THAT ONLY THE FIRST R OF THESE ARE NEEDED FOR THE CROSS-
C        CORRELATIONS.
C
   30 CALL SCALAR(PSI(1, 1, 0), K, 1.0)
C
C        PSI(0) = IDENTITY
C
      DO 50 S = 1, LMAX
C
C        FORM PSI(S)
C
      IF (S .LE. R) CALL MATSUB(PSI(1, 1, S), PHI(1, 1, S), THETA(1, 1,
     *  S), K, K)
C
      IF (S .EQ. 1) GOTO 50
C
C        NO SUMMATION IN THIS CASE.
C
      IF (S .GT. R) CALL LINZER(PSI(1, 1, S), K * K)
C
C        ZERO INITIAL TERM
C
      IF (PZERO) GOTO 50
      IMAX = MIN0(P, S - 1)
C
C        BECAUSE PHI(I)=0 FOR I>P
C
      DO 40 I = 1, IMAX
      SMI = S - I
      CALL MATMUL(W, PHI(1, 1, I), PSI(1, 1, SMI), K, K, K, K)
      CALL MATADD(PSI(1, 1, S), PSI(1, 1, S), W, K, K)
   40 CONTINUE
C
   50 CONTINUE
C
C        NEXT,FORM THE S.L.E. SYSTEM [EQNS. (1A)] FOR THE FIRST (1+R)
C        GAMMA'S. THE RHS CONSTANTS ARE ASSEMBLED IN THE GAMMA ARRAY,
C        BECAUSE THAT IS WHERE THE 'SOLVE' ROUTINE IS REQUIRED TO
C        DEPOSIT THE SOLUTIONS. THE FORMULAE FOR THESE ARE:
C
C        [B(L)](I,J) = [ SUM( PSI(S)*SIGMA*THETA'(S+L) )](I,J)  ,
C
C        WHERE THE SUM IS OVER  S=0,1,....,R-L.   NOTE THAT THE FIRST
C        TERM (S=0) IN THE SUMMATION IS ALWAYS  PSI(0)*SIGMA*THETA'(L),
C        AND WE KNOW THAT  PSI(0)=IDENTITY MATRIX.
C
      DO 70 LP1 = 1, RP1
C
C        COMPUTE B(L)
C
      L = LP1 - 1
      CALL MULTRA(GAMMA(1, 1, L), SIGMA, THETA(1, 1, L), K, K, K, K)
      IF (L .EQ. R) GOTO 70
C
C        ONLY ONE TERM IN THIS CASE
C
      RML = R - L
      DO 60 S = 1, RML
C
C        FORM S'TH TERM AND ADD UP
C
      LPS = L + S
      CALL MULTRA(W, SIGMA, THETA(1, 1, LPS), K, K, K, K)
      CALL MATMUL(W1, PSI(1, 1, S), W, K, K, K, K)
      CALL MATADD(GAMMA(1, 1, L), GAMMA(1, 1, L), W1, K, K)
   60 CONTINUE
   70 CONTINUE
C
C        NOW ASSEMBLE THE COEFFICIENT ARRAY  C. THE MAPPING FUNCTION
C        FOR THE LINEAR NUMBERING OF THE GAMMA(L)(I,J) ELEMENTS IS
C        CHOSEN TO MATCH THE NATURAL STORE ORDERING; HENCE THE POINTER
C        FUNCTION IS:  ZROW(I,J,L,K)=L*K**2 + (J-1)*K + I
C        HOWEVER, IF P=0 THEN  GAMMA(L)=-B(L), AND NO SLE'S NEED BE
C        SOLVED.
C
      IF (P .GT. 0) GOTO 80
      CALL NEGATE(GAMMA, KKRP1)
C
C        LINEARISED VERSION
C
      GOTO 100
C
   80 CALL LINZER(C, KKRP1 * KKRP1)
C
      DO 90 LP1 = 1, RP1
C
      L = LP1 - 1
C
C        L'TH EQUATION OF SYSTEM (1A)
C
      LMR = L - R
C
      DO 90 I = 1, K
C
C        I'TH ROW
C
      DO 90 J = 1, K
C
C        J'TH COLUMN
C
      IROW = ZROW(I, J, L, K)
C
      DO 90 S = LMR, L
C
C        OF S'TH TERM IN L-H SUMMATION
C
      MS = IABS(S)
      NEG = S .LT. 0
      POS = .NOT.NEG
      LMS = L - S
C
      DO 90 IA = 1, K
C
C        S'TH TERM IS A MATRIX PRODUCT
C
      
      IF (POS) JCOL = ZROW(I, IA, S, K)
      IF (NEG) JCOL = ZROW(IA, I, MS, K)
C
C        GAMMA(-S)=GAMMA'(S)
C
      C(IROW, JCOL) = PHI(J, IA, LMS)
   90 CONTINUE
C
C        PHI TRANSPOSED
C
C        THIS COMPLETES THE ASSEMBLY OF SLE SYSTEM (1). NOW SOLVE THEM;
C        THE SOLUTION IS OVERWRITTEN ON GAMMA.
C
      CALL SOLVE(KKRP1, .TRUE., C, GAMMA, DDET, GAMMA, IFAULT)
      IF (IFAULT .NE. 0) GOTO 130
C
C        FINALLY, COMPUTE THE REMAINING GAMMA(L) FOR L=R+1,....,LMAX
C
  100 IF (LMAX .LE. R) GOTO 130
C
      CALL LINZER(GAMMA(1, 1, RP1), K * K * (LMAX - R))
C
C        ZERO REMAINING
C
      IF (PZERO) GOTO 130
C
      DO 120 L = RP1, LMAX
      DO 110 S = 1, P
C
C        COMPUTE S'TH PRODUCT OF SUM
C
      LMS = L - S
      CALL MULTRA(W, GAMMA(1, 1, LMS), PHI(1, 1, S), K, K, K, K)
      CALL MATADD(GAMMA(1, 1, L), GAMMA(1, 1, L), W, K, K)
  110 CONTINUE
  120 CONTINUE
C
  130 RETURN
      END

      SUBROUTINE CORREL(K, LMAX, G, RHO, W)
C
C        ALGORITHM AS232.1 APPL. STATIST. (1988) VOL. 37, NO. 1
C
      REAL WI, DENOM
      DIMENSION G(K, K, 0:LMAX), RHO(K, K, 0:LMAX), W(K)
C
C        W IS A SCRATCH ARRAY;  G(1:K,1:K,L) HOLDS THE GAMMA(L)
C        MATRICES. FIRST SET UP THE VALUES  SQRT(G(I,I,0) IN W(I)
C
      DO 10 I = 1, K
   10 W(I) = SQRT(G(I, I, 0))
C
C        NOW DIVIDE THE G(I,J,L) BY THE W(I)*W(J)
C
      LM1 = LMAX + 1
      DO 20 I = 1, K
      WI = W(I)
      DO 20 J = 1, K
C
      DENOM = WI * W(J)
C
      DO 20 LP1 = 1, LM1
      L = LP1 - 1
      RHO(I, J, L) = G(I, J, L) / DENOM
   20 CONTINUE
C
      RETURN
      END

      SUBROUTINE PARTLS(K, PSTAMX, KKLMAX, NOOPUT, GAMMA, PHISTA, C,
     *  IFAULT)
C
C        ALGORITHM AS232.2 APPL. STATIST. (1988) VOL. 37, NO. 1
C
      INTEGER PSTAR, PSTAMX
      DIMENSION GAMMA(K, K, 0:PSTAMX), PHISTA(K, K, 0:PSTAMX), C(KKLMAX,
     *  KKLMAX)
C
C        TO COMPUTE THE PARTIAL CORRELATION MATRICES FOR
C        PSTAR=1,2,..,PSTAMX. THESE ARE COMPUTED IN REVERSE ORDER SO
C        THAT AT THE END THE 3-D ARRAY WILL KEEP THEM ALL IN ORDER
C        (I.E.  PHISTA( , ,L) CONTAINS THE L'TH).
C
      PSTAR = PSTAMX
   10 KKPST = K * K * PSTAR
C
C        ORDER OF SYSTEM (2) FOR THIS PSTAR
C
      CALL PUREAR(K, PSTAR, KKPST, GAMMA, PHISTA, C, IFAULT)
      IF (IFAULT .NE. 0) RETURN
C
      PSTAR = PSTAR - 1
      IF (PSTAR .GE. 10) GOTO 10
C
      RETURN
      END

      SUBROUTINE PUREAR(K, PSTAR, KKPST, GAMMA, PHISTA, C, IFAULT)
C
C        ALGORITHM AS232.3 APPL. STATIST. (1988) VOL. 37, NO. 1
C
      INTEGER PSTAR, S, ZROW
      DIMENSION GAMMA(K, K, 0:PSTAR), PHISTA(K, K, 0:PSTAR), C(KKPST,
     *  KKPST)
C
C        TO SOLVE FOR THE PHI* ARRAYS, GIVEN P*;  KKPST=K*K*PSTAR
C        THE LINEAR MAPPING FUNCTION IS THE SAME AS IN S/R XCOVAR :
C
      ZROW(I, J, L, K) = ((L - 1) * K + J - 1) * K + I
C
C        NO ZERO PLANE HERE, THOUGH
C
      IFAULT = 0
      IF (KKPST .EQ. K * K * PSTAR) GOTO 10
      IFAULT = -1
      RETURN
   10 CONTINUE
      CALL SCALAR(PHISTA(1, 1, 0), K, -1.0)
      CALL LINZER(C, KKPST ** 2)
C
      DO 20 L = 1, PSTAR
      DO 20 I = 1, K
      DO 20 J = 1, K
C
      IROW = ZROW(I, J, L, K)
C
      DO 20 S = 1, PSTAR
C
      LMS = L - S
      MLMS = IABS(LMS)
C
      DO 20 IA = 1, K
C
      JCOL = ZROW(J, IA, S, K)
C
      IF (LMS .GE. 0) G = GAMMA(I, IA, LMS)
      IF (LMS .LT. 0) G = GAMMA(IA, I, MLMS)
C
C        GAMMA(-L)=GAMMA'(L)
C
      C(IROW, JCOL) = G
   20 CONTINUE
C
C        THIS COMPLETES THE FORMATION OF THE COEFF MATRIX FOR SYSTEM (2)
C
      CALL SOLVE(KKPST, .TRUE., C, GAMMA(1, 1, 1), DDET,
     * PHISTA(1, 1, 1), IFAULT)
      IF (IFAULT .NE. 0) IFAULT = PSTAR
C
      RETURN
      END
C
      SUBROUTINE DETERM(K, LMAX, A, DETS, C)
C
C        ALGORITHM AS232.4 APPL. STATIST. (1988) VOL. 37, NO. 1
C
      DIMENSION A(K, K, 0:LMAX), DETS(0:LMAX), C(K, K, 0:LMAX)
C
C        EVALUATE THE DETERMINANTS (BY LU FACTORISATION) OF EACH K-BY-K
C        MATRIX IN THE PLANES OF 'A'; STORE DET(A(,,L))  IN  DETS(L).
C
      KKLM1 = K * K * (LMAX + 1)
C
C        TOTAL NUMBER OF ELEMENTS
C
      CALL LINCOP(C, A, KKLM1)
C
C        PRESERVE A
C
      DO 1 L = 0, LMAX
    1 CALL SOLVE(K, .FALSE., C(1, 1, L), DETS, DETS(L), DETS, IFAULT)
C
C        THE TWO ARGUMENTS 'DETS' ARE NOT ACCESSED BY S/R SOLVE, SINCE
C        THE 'RHS' PARAMETER HAS THE VALUE .FALSE.
C
      RETURN
      END
