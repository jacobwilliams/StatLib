      SUBROUTINE COMBDD(ND, NU, IV, NB, MAXNB, KBS, MAXKBS, NCOMP, IDES,
     *  IFAULT)
C
C        ALGORITHM AS224 APPL. STATIST. (1987) VOL. 36, NO. 2
C
      DIMENSION IB(5), NCOMP(5, 10, 36), KBS(5), IDES(72), NB(5)
      DIMENSION ILIST(72), IR(72)
C
C        COMBINES ND COMPONENT DESIGNS TO FORM A DESIGN WITH
C        ND ORTHOGONAL BLOCKING FACTORS
C
C        NTH COMPONENT DESIGN STORED IN NCOMP(N,.,.)
C        ..    ..       ..   HAS NB(N) BLOCKS OF SIZE KBS(N)
C
C
C        CHECK PARAMETERS
C
      IFAULT = 1
      IF (ND .LT. 2) RETURN
      M = 1
      DO 1 N = 1, ND
      IFAULT = 2
      L = NB(N) * KBS(N)
      IF (L .NE. NU) RETURN
      IFAULT = 3
      IF (NB(N) .GT. MAXNB) RETURN
      IFAULT = 4
      IF (KBS(N) .GT. MAXKBS) RETURN
      M = M * NB(N)
    1 CONTINUE
      IFAULT = 5
      IF (M .NE. NU) RETURN
      IFAULT = 6
C
C        INITIALISE ILIST AND IR
C        ILIST HOLDS TREATMENT LABELS AND IR THE REPLICATIONS
C
      DO 2 I = 1, IV
      ILIST(I) = 0
      IR(I) = 0
    2 CONTINUE
C
C        INITIALISE IDES.  IDES HOLDS COMBINED DESIGN
C
      IL = 0
      ID = 0
      INB = NB(1)
      K = KBS(1)
      DO 5 I = 1, INB
      DO 5 J = 1, K
      ID = ID + 1
      IDES(ID) = -1
C
C        SET ITR EQUAL TO NEXT TREATMENT
C        IN FIRST COMPONENT DESIGN
C
      ITR = NCOMP(1, I, J)
C
C        IF ITR IS ALREADY RECORDED IN ILIST, THEN
C        ADD ONE TO CORRESPONDING ELEMENT IN IR
C
      IF (IL .EQ. 0) GOTO 4
      DO 3 JL = 1, IL
      IF (ILIST(JL) .NE. ITR) GOTO 3
      IR(JL) = IR(JL) + 1
      GOTO 5
    3 CONTINUE
C
C        RECORD ITR IN ILIST
C        SET CORRESPONDING ELEMENT IN IR EQUAL TO 1
C
    4 IL = IL + 1
      IF (IL .GT. IV) RETURN
      ILIST(IL) = ITR
      IR(IL) = 1
    5 CONTINUE
      IFAULT = 0
C
C        CHECK EVERY COMPONENT DESIGN CONTAINS SAME NUMBER
C        OF OCCURRENCES OF EVERY TREATMENT LABEL
C
      DO 7 JL = 1, IV
      ITR = ILIST(JL)
      DO 7 JN = 2, ND
      KREP = 0
      INB = NB(JN)
      K = KBS(JN)
      DO 6 I = 1, INB
      DO 6 J = 1, K
      IF (NCOMP(JN, I, J) .NE. ITR) GOTO 6
      KREP = KREP + 1
    6 CONTINUE
      IF (KREP .EQ. IR(JL)) GOTO 7
      IFAULT = 7
      RETURN
    7 CONTINUE
      KREP = 0
C
C        SET ITR EQUAL TO FIRST TREATMENT TO BE FITTED
C
      IL = 1
      ITR = ILIST(IL)
      LSTFIT = 0
C
C        RETURN COMBINED DESIGN
C
    8 IF (IL .EQ. IV .AND. KREP .EQ. IR(IL)) RETURN
C
C        INITIALISE IB.  IB(N) HOLDS NUMBER OF
C        CURRENT BLOCK IN NTH COMPONENT DESIGN
C
      DO 9 N = 1, ND
    9 IB(N) = 0
      N = 1
C
C        SET KREP EQUAL TO NEXT OCCURRENCE OF TREATMENT TO BE FITTED
C
      KREP = KREP + 1
      IF (KREP .LE. IR(IL)) GOTO 11
C
C        ALL OCCURRENCES OF PRESENT TREATMENT HAVE BEEN FITTED
C        FIND NEXT TREATMENT
C
      KREP = 1
      IL = IL + 1
      ITR = ILIST(IL)
C
C        INITIALISE THE MARKER LSTFIT
C        LSTFIT PREVENTS ANY TREATMENT BEING FITTED IN
C        AN EARLIER POSITION IN IDES
C
      LSTFIT = 0
      GOTO 11
C
C        MOVE TO PREVIOUS COMPONENT DESIGN
C
   10 IB(N) = 0
      N = N - 1
      IF (N .EQ. 1) GOTO 18
C
C        MOVE TO NEXT BLOCK IN PRESENT COMPONENT DESIGN
C
   11 IB(N) = IB(N) + 1
      IF (IB(N) .GT. NB(N)) GOTO 10
C
C        LOCATE IN PRESENT COMPONENT DESIGN
C        NEXT OCCURRENCE OF TREATMENT TO BE FITTED
C
   12 IS = IB(N)
      INB = NB(N)
      IBS = KBS(N)
      DO 13 I = IS, INB
      DO 13 J = 1, IBS
      IF (NCOMP(N, I, J) .NE. ITR) GOTO 13
      IB(N) = I
      IF (N .EQ. ND) GOTO 14
C
C        MOVE TO NEXT COMPONENT DESIGN
C
      N = N + 1
      GOTO 11
   13 CONTINUE
      GOTO 10
C
C        SEE IF CURRENT POSITION IN D-DIMENSIONAL DESIGN IS VACANT
C
   14 ID = IB(1) - 1
      DO 15 N1 = 2, ND
   15 ID = (ID * NB(N1)) + IB(N1) - 1
      ID = ID + 1
      IF (ID .LE. LSTFIT .OR. IDES(ID) .NE. -1) GOTO 11
C
C        FIT TREATMENT IN D-DIMENSIONAL DESIGN
C        SET LSTFIT EQUAL TO POSITION JUST FILLED
C
      IDES(ID) = ITR
      LSTFIT = ID
C
C        SET FITTED TREATMENT NEGATIVE IN COMPONENT DESIGNS
C
      DO 17 N = 1, ND
      I = IB(N)
      IBS = KBS(N)
      DO 16 J = 1, IBS
      IF (NCOMP(N, I, J) .NE. ITR) GOTO 16
      NCOMP(N, I, J) = -ITR
      IF (ITR .EQ. 0) NCOMP(N, I, J) = -9999
      GOTO 17
   16 CONTINUE
   17 CONTINUE
C
      GOTO 8
C
C        CURRENT OCCURRENCE OF TREATMENT CANNOT BE FITTED
C        DETERMINE PREVIOUSLY FITTED OCCURRENCE OF TREATMENT
C
   18 KREP = KREP - 1
      IF (KREP .GE. 1) GOTO 20
      IL = IL - 1
      IF (IL .GT. 0) GOTO 19
C
C        DESIGNS CANNOT BE AMALGAMATED
C
      IFAULT = 8
      RETURN
C
C        DETERMINE LAST OCCURRENCE OF PREVIOUSLY FITTED TREATMENT
C
   19 ITR = ILIST(IL)
      KREP = IR(IL)
C
C        REMOVE OCCURRENCE OF TREATMENT FROM ND-DIMENSIONAL DESIGN
C        SET LSTFIT EQUAL TO VACATED POSITION
C
   20 DO 21 I = 1, NU
      ID = NU - I + 1
      IF (IDES(ID) .EQ. ITR) GOTO 22
   21 CONTINUE
   22 IDES(ID) = -1
      LSTFIT = ID
C
C        FIND LOCATION OF REMOVED TREATMENT IN COMPONENT DESIGNS
C
      ID = ID - 1
      DO 23 N = 1, ND
      I = ND - N + 1
      I1 = ID
      ID = ID / NB(I)
      IB(I) = I1 - (ID * NB(I)) + 1
   23 CONTINUE
C
C        SET REMOVED TREATMENT POSITIVE IN COMPONENT DESIGNS
C
      DO 25 N = 1, ND
      I = IB(N)
      IBS = KBS(N)
      IF (ITR .EQ. 0) ITR = 9999
      DO 24 J = 1, IBS
      IF (NCOMP(N, I, J) .NE. -ITR) GOTO 24
      IF (ITR .EQ. 9999) ITR = 0
      NCOMP(N, I, J) = ITR
      GOTO 25
   24 CONTINUE
   25 CONTINUE
C
C        TRY TO REFIT REMOVED TREATMENT
C        OR REMOVE ANOTHER OCCURRENCE OF SAME TREATMENT
C
      IF (KREP .EQ. IR(IL)) GOTO 18
      N = ND
      GOTO 12
      END
