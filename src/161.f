      SUBROUTINE TABLE(N1, N2, ALPHA, MM, A1, PMAX, FSUM, A2, PMAX2,
     * FSUM2, IFAULT)
C
C        ALGORITHM AS 161 APPL. STATIST. (1981) VOL.30, NO.2
C
      DIMENSION MM(101, 2), FSUM(201), X(101, 101), COM(101),
     * FSUM2(201), COMB(101), COMBO(201)
C
      IFAULT = 0
      IF (N2 .GT. 100) IFAULT = IFAULT + 1
      IF (N1 .GT. N2) IFAULT = IFAULT + 2
      IF (ALPHA .LE. 0.0 .OR. ALPHA .GE. 0.3) IFAULT = IFAULT + 4
      IF (IFAULT .NE. 0) RETURN
      N11 = N1 + 1
      N21 = N2 + 1
      CALL COMBIN(N11, COM)
      CALL COMBIN(N21, COMB)
      CALL COMBIN(N1 + N2 + 1, COMBO)
      DO 10 I = 1, N11
	MM(I, 1) = 999
	MM(I, 2) = -999
   10 CONTINUE
      DO 15 I = 1, N11
	DO 15 J = 1, N21
	X(I, J) = -1.0
   15 CONTINUE
C
C        INCREASE CHECK UNTIL SIG, THE LEAST UPPER BOUND ON
C        THE SIZE OF CRITICAL REGION, IS .GE. ALPHA + 0.0005
C
      DEL = 0.1
      CHECK = 3.0 * ALPHA
   20 IF (CHECK .GT. 1.0) GOTO 30
      CALL UMPUAL(N1, N2, CHECK, MM, X, SIG, FSUM, PMAX,
     * COM, COMB, COMBO)
      IF (SIG .GE. ALPHA) GOTO 40
      CHECK = CHECK + DEL
      GOTO 20
   30 CHECK = 1.0
      CALL UMPUAL(N1, N2, CHECK, MM, X, SIG, FSUM, PMAX,
     * COM, COMB, COMBO)
   40 IF (SIG .LE. ALPHA + 0.0005) GOTO 50
C
C        BACKUP SIG UNTIL LESS THAN ALPHA BY REPEATEDLY
C        ELIMINATING THE POINT WITH LARGEST PROBABILITY
C        FROM THE CRITICAL REGION
C
      J = 1
      IF (MM(J, 1) .EQ. 999) GOTO 50
      JOLD = MM(J, 1)
      DO 45 I = 1, N11
	IF (MM(I, 1) .EQ. 999) GOTO 47
	INEW = MM(I, 1)
	IF (X(I, INEW) .LE. X(J, JOLD)) GOTO 45
	J = I
	JOLD = MM(J, 1)
   45 CONTINUE
C
C        REMOVE ALL X VALUES CLOSE TO THE MAXIMUM VALUE
C
   47 XVAL = X(J, JOLD)
      DO 49 I = 1, N11
	IF (MM(I, 1) .EQ. 999) GOTO 49
	INEW = MM(I, 1)
	IF (ABS(X(I, INEW) - XVAL) .GT. 0.00005) GOTO 49
	MM(I, 1) = MM(I, 1) + 1
	IF (MM(I, 1) .GT. N21) MM(I, 1) = 999
   49 CONTINUE
      CALL TMAX(MM, N1, N2, SIG, PMAX, FSUM, COM, COMB)
      GOTO 40
   50 A1 = SIG
      DO 60 I = 1, N11
	IF (MM(I, 1) .EQ. 999) GOTO 60
	IREV = N11 - I + 1
	MM(IREV, 2) = N21 + 1 - MM(I, 1)
   60 CONTINUE
      CALL TMAX(MM, N1, N2, A2, PMAX2, FSUM2, COM, COMB)
      DO 70 J = 1, N11
	IF (MM(J, 1) .NE. 999) MM(J, 1) = MM(J, 1) - 1
	IF (MM(J, 2) .NE. -999) MM(J, 2) = MM(J, 2) - 1
   70 CONTINUE
      RETURN
      END
C
C
      SUBROUTINE COMBIN(NP1, C)
C
C        ALGORITHM AS 161.1 APPL. STATIST. (1981) VOL.30, NO.2
C
C        COMPUTE THE COMBINATIONS OF N = NP1 - 1 ITEMS
C        TAKING J AT A TIME AND STORE THEM IN THE ARRAY
C        C(J + 1), J = 0, 1, 2, ..., N
C
      DIMENSION C(NP1)
      N = NP1 - 1
      C(1) = 1.0
      C(2) = FLOAT(N)
      C(N) = FLOAT(N)
      C(N + 1) = 1.0
      IF (N .LE. 3) RETURN
      M = N / 2 + 1
      DO 10 J = 3, M
	NMJP2 = N - J + 2
	C(J) = C(J - 1) * (FLOAT(NMJP2) / FLOAT(J - 1))
	C(NMJP2) = C(J)
   10 CONTINUE
      RETURN
      END
C
C
      SUBROUTINE UMPUAL(N1, N2, CHECK, MM, X, SIG, FSUM, PMAX, COM,
     * COMB, COMBO)
C
C        ALGORITHM AS 161.2 APPL. STATIST. (1981) VOL.30, NO.2
C
      DIMENSION MM(101, 2), COMBO(201), COMB(101), COM(101), FSUM(201)
      DIMENSION X(101, 101)
      N11 = N1 + 1
      N21 = N2 + 1
      BETA0 = CHECK
C
C        ADD POINTS TO CRITICAL REGION WITH X1 + X2 CONSTANT, UNTIL
C        THE SUM OF THE PROBABILITIES (BY THE HYPERGEOMETRIC) IS AS
C        LARGE AS POSSIBLE WITHOUT EXCEEDING CHECK
C
C        THE CRITICAL REGION IS REPRESENTED BY MM AND HAS BEEN
C        INITIALIZED IN SUBROUTINE TABLE.
C
C        ADJUST THE CURRENT MM VALUES ROW BY ROW (J1 = 1, N11).
C
      DO 100 J1 = 1, N11
C
C        IF NO ENTRY IN ROW IS CURRENTLY IN THE CRITICAL REGION,
C        ASSUME THE LAST ENTRY (N21) IS.
C

      IF (MM(J1, 1) .EQ. 999) MM(J1, 1) = N2
C
C        INITIALIZE BETAU AND START J2 INCREASED BY 1 FOR THE LOOP
C
      J2 = MM(J1, 1) + 1
      BETAU = -1.0
C
C        WHILE WE ARE STILL IN THE ROW AND THE POSITION IS IN THE
C        CRITICAL REGION, CALCULATE BETAU BY THE HYPERGEOMETRIC
C        ON THE DIAGONAL. THE SUM OF THE PROBABILITIES IS STORED
C        IN X, AN N11 * N21 ARRAY. THE COMPUTATION IS BYPASSED
C        IF DONE EARLIER.
C
   10 IF (J2 .LE. 1 .OR. BETAU .GT. BETA0) GOTO 40
      J2 = J2 - 1
      IF (X(J1, J2) .NE. -1.0) GOTO 30
      J1J2M1 = J1 + J2 - 1
      BETAU = COM(J1) * COMB(J2) / COMBO(J1J2M1)
      IF (J1 .NE. 1 .AND. J2 .NE. N21) BETAU = BETAU + X(J1 - 1, J2 + 1)
      X(J1, J2) = BETAU
      GOTO 10
C
C        RETRIEVE BETAU FROM X ARRAY
C
   30 BETAU = X(J1, J2)
      GOTO 10
C
C        IF WE STOPPED BECAUSE J2 = 1, CONTINUE WITH J1 LOOP
C        OTHERWISE, BACKUP J2 FIRST.
C
   40 IF (BETAU .GT. BETA0) J2 = J2 + 1
C
C        CHECK TO SEE IF ANY POINT IN ROW IS IN THE CRITICAL REGION
C
      IF (J2 .GT. N21) J2 = 999
      MM(J1, 1) = J2
  100 CONTINUE
C
C        FOR THE CRITICAL REGION WITH SIZE LESS THAN OR
C        EQUAL TO CHECK UNDER THE NONRANDOMIZED UMPU TEST,
C        FIND SIG THE LEAST UPPER BOUND ON ITS SIZE UNDER
C        THE UNCONDITIONAL NON-RANDOMIZED TEST
C
      CALL TMAX(MM, N1, N2, FMAX, PMAX, FSUM, COM, COMB)
      SIG = FMAX
      RETURN
      END
C
C
      SUBROUTINE TMAX(MM, N1, N2, FMAX, PMAX, FSUM, COM, COMB)
C
C        ALGORITHM AS 161.3 APPL. STATIST. (1981) VOL.30, NO.2
C
      DIMENSION FSUM(201), MM(101, 2), P(201), DFSUM(201), COM(101),
     *  COMB(101)
      DATA EPS /0.00001/
C
C        EVALUATE THE PROBABILITY, FSUM(P), OF THE CRITICAL REGION
C        UNDER THE HYPOTHESIS P1 = P2 = P FOR P = 0.0, ..., 1.0
C
      F = 0.0
      KSTEP = N1 + N2 + 1
      DEL = 1.0 / FLOAT(N1 + N2)
      DO 10 K = 1, KSTEP
	P(K) = F
	CALL SRCH(MM, F, N1, N2, FSUM(K), DFSUM(K), COM, COMB)
	F = F + DEL
   10 CONTINUE
      FMAX = 0.0
      PMAX = 0.0
      IF (MM(1, 1) .EQ. 999 .AND. MM(N1 + 1, 2) .EQ. -999) RETURN
C
C        APPROXIMATE THE LEAST UPPER BOUND, FMAX, FOR THE PROBABILITY
C        OF THE CRITICAL REGION ON THE INTERVAL 0.0 TO 1.0
C
      J = 1
      DO 20 I = 2, KSTEP
	IF (FSUM(I) .GT. FSUM(J)) J = I
   20 CONTINUE
      FMAX = FSUM(J)
      PMAX = P(J)
C
C        IF FMAX OCCURS AT EITHER ENDPOINT OF (0, 1) BRANCH OUT
C
      PJMID = P(J)
      SUMID = FSUM(J)
      DSUMID = DFSUM(J)
      IF (J .EQ. 1) GOTO 60
      IF (J .EQ. KSTEP) GOTO 70
C
C        BRANCH OUT IF THE FUNCTION FSUM(P) IS FLAT ENOUGH IN THE
C        NEIGHBORHOOD OF FMAX
C
   25 IF (DFSUM(J - 1) * DFSUM(J + 1) .GT. 0.0) GOTO 40
      SUMLO = FSUM(J - 1)
      PJLO = P(J - 1)
      SUMHI = FSUM(J + 1)
      PJHI = P(J + 1)
   30 IF (ABS(SUMID - SUMLO) .LE. EPS .AND.
     * ABS(SUMID - SUMHI) .LE. EPS) GOTO 40
      IF (DSUMID) 34, 40, 32
   32 PJLO = PJMID
      SUMLO = SUMID
      GOTO 38
   34 PJHI = PJMID
      SUMHI = SUMID
   38 PJMID = (PJLO + PJHI) * 0.5
      CALL SRCH(MM, PJMID, N1, N2, SUMID, DSUMID, COM, COMB)
      GOTO 30
   40 FMAX = SUMID
      PMAX = PJMID
      RETURN
   60 IF (FMAX .GE. 0.9999) RETURN
      G = 0.0001
      CALL SRCH(MM, G, N1, N2, RUM, DRUM, COM, COMB)
C
C        IF FMAX OCCURS AT 0, RETURN.
C
      IF (RUM .LT. FMAX) RETURN
      J = 2
      GOTO 25
   70 IF (FMAX .GE. 0.9999) RETURN
      G = 0.9999
      CALL SRCH(MM, G, N1, N2, RUM, DRUM, COM, COMB)
C
C        IF FMAX OCCURS AT 1, RETURN.
C
      IF (RUM .LT. FMAX) RETURN
      J = KSTEP - 1
      GOTO 25
      END
C
C
      SUBROUTINE SRCH(MM, PP, N1, N2, SUMS, DSUMS, COM, COMB)
C
C        ALGORITHM AS 161.4 APPL. STATIST. (1981) VOL.30, NO.2
C
C        FIND THE SIZE OF THE CRITICAL REGION UNDER THE UNCONDITIONAL
C        NONRANDOMIZED TEST WITH PROBABILITY P1 = P2 = PP
C
      DIMENSION MM(101, 2), COM(101), COMB(101)
C
      N11 = N1 + 1
      N21 = N2 + 1
      SUM = 0.0
      SUMM = 0.0
      DSUM = 0.0
      DSUMM = 0.0
      IF (PP .GE. 0.99999) GOTO 30
      IF (PP .LE. 0.00001) GOTO 40
C
C        SEARCH THE ONE-SIDED CRITICAL REGION
C
      PP1 = 1.0 - PP
      DO 20 I = 1, N11
      IF (MM(I, 1) .EQ. 999) GOTO 50
      NE = N21
      DP1EXP = PP1 ** (I + N2)
      PPEXP = PP ** (I + N2)
      DPPEXP = PP ** (N1 - I)
      PP1EXP = PP1 ** (N1 - I)
      DO 10 J = 1, N21
      IF (MM(I, 1) .GT. NE) GOTO 20
      PPEXP = PPEXP / PP
      PP1EXP = PP1EXP * PP1
C
C         EVALUATE THE PROBABILITY OF A POINT IN THE CRITICAL REGION
C         BY THE PRODUCT OF INDEPENDENT BINOMIAL TERMS AND ACCUMULATE
C         IN SUM. ALSO EVALUATE THE DERIVATIVE OF SUM AT P1 = P2 = PP.
C
      IF (MM(1, 1) .EQ. 999) GOTO 4
      SUM = SUM + COM(I) * COMB(NE) * PPEXP * PP1EXP
      DSUM = DSUM + COM(I) * COMB(NE) * (FLOAT(I + N2 - J) * PPEXP /
     * PP * PP1EXP - FLOAT(N1 + J - I) * PPEXP * PP1EXP / PP1)
    4 IF (MM(N11, 2) .EQ. -999) GOTO 5
      DPPEXP = DPPEXP * PP
      DP1EXP = DP1EXP / PP1
      SUMM = SUMM + COM(I) * COMB(NE) * DPPEXP * DP1EXP
      DSUMM = DSUMM + COM(I) * COMB(NE) * (FLOAT(N1 + J - I) * DPPEXP /
     * PP * DP1EXP - FLOAT(N2 + I - J) * DPPEXP * DP1EXP / PP1)
    5 NE = NE - 1
   10 CONTINUE
   20 CONTINUE
      GOTO 50
   30 IF (MM(N11, 1) .NE. 999) SUM = 1.0
      SUMS = SUM + SUMM
      RETURN
C
   40 IF (MM(1, 1) .EQ. 1) SUM = 1.0
      SUMS = SUM
      RETURN
C
   50 SUMS = SUM + SUMM
      DSUMS = DSUM + DSUMM
      RETURN
      END

