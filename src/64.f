CSTART OF AS 64/109
      REAL FUNCTION XINBTA(P, Q, BETA, ALPHA, IFAULT)
C
C        ALGORITHM AS 109  APPL. STATIST. (1977) VOL.26, P.111
C        (REPLACING ALGORITHM AS 64  APPL. STATIST. (1973),
C        VOL.22, P.411)
C
C        COMPUTES INVERSE OF INCOMPLETE BETA FUNCTION
C        RATIO FOR GIVEN POSITIVE VALUES OF THE ARGUMENTS
C        P AND Q, ALPHA BETWEEN ZERO AND ONE.
C        LOG OF COMPLETE BETA FUNCTION, BETA, IS ASSUMED TO BE
C        KNOWN.
C
      LOGICAL INDEX
      REAL A, ALPHA, ADJ, BETA, G, H, P, PP, PREV, Q, QQ, R, S,
     $  SQ, T, TX, W, Y, YPREV, ZERO, HALF, ONE, TWO, THREE,
     $  FOUR, FIVE, SIX, NINE, ACU, LOWER, UPPER, CONST1,
     $  CONST2, CONST3, CONST4, BETAIN, ZEXP, ZLOG, ZSQRT
C
C        DEFINE ACCURACY AND INITIALIZE
C
      DATA ZERO, HALF, ONE, TWO, THREE, FOUR, FIVE, SIX, NINE
     $     /0.0,  0.5, 1.0, 2.0,   3.0,  4.0,  5.0, 6.0,  9.0/
      DATA   ACU,  LOWER,  UPPER,  CONST1,  CONST2,  CONST3,  CONST4
     $  /1.0E-14, 0.0001, 0.9999, 2.30753, 0.27061, 0.99229, 0.04481/
C
      ZEXP(A) = EXP(A)
      ZLOG(A) = ALOG(A)
      ZSQRT(A) = SQRT(A)
C
      XINBTA = ALPHA
C
C        TEST FOR ADMISSIBILITY OF PARAMETERS
C
      IFAULT = 1
      IF (P .LE. ZERO .OR. Q .LE. ZERO) RETURN
      IFAULT = 2
      IF (ALPHA .LT. ZERO .OR. ALPHA .GT. ONE) RETURN
      IFAULT = 0
      IF (ALPHA .EQ. ZERO .OR. ALPHA .EQ. ONE) RETURN
C
C        CHANGE TAIL IF NECESSARY
C
      IF (ALPHA .LE. HALF) GOTO 1
      A = ONE - ALPHA
      PP = Q
      QQ = P
      INDEX = .TRUE.
      GOTO 2
    1 A = ALPHA
      PP = P
      QQ = Q
      INDEX = .FALSE.
C
C        CALCULATE THE INITIAL APPROXIMATION
C
    2 R = ZSQRT(-ZLOG(A * A))
      Y = R - (CONST1 + CONST2 * R) / (ONE + (CONST3 + CONST4 *
     $  R) * R)
      IF (PP .GT. ONE .AND. QQ .GT. ONE) GOTO 5
      R = QQ + QQ
      T = ONE / (NINE * QQ)
      T = R * (ONE - T + Y * ZSQRT(T)) ** 3
      IF (T .LE. ZERO) GOTO 3
      T = (FOUR * PP + R - TWO) / T
      IF (T .LE. ONE) GOTO 4
      XINBTA = ONE - TWO / (T + ONE)
      GOTO 6
    3 XINBTA = ONE - ZEXP((ZLOG((ONE - A) * QQ) + BETA) / QQ)
      GOTO 6
    4 XINBTA = ZEXP((ZLOG(A * PP) + BETA) / PP)
      GOTO 6
    5 R = (Y * Y - THREE) / SIX
      S = ONE / (PP + PP - ONE)
      T = ONE / (QQ + QQ - ONE)
      H = TWO / (S + T)
      W = Y * ZSQRT(H + R) / H - (T - S) * (R + FIVE / SIX -
     $  TWO / (THREE * H))
      XINBTA = PP / (PP + QQ * ZEXP(W + W))
C
C        SOLVE FOR X BY A MODIFIED NEWTON-RAPHSON METHOD,
C        USING THE FUNCTION BETAIN
C
    6 R = ONE - PP
      T = ONE - QQ
      YPREV = ZERO
      SQ = ONE
      PREV = ONE
      IF (XINBTA .LT. LOWER) XINBTA = LOWER
      IF (XINBTA .GT. UPPER) XINBTA = UPPER
    7 Y = BETAIN(XINBTA, PP, QQ, BETA, IFAULT)
      IF (IFAULT .EQ. 0) GOTO 8
      IFAULT = 3
      RETURN
    8 Y = (Y - A) * ZEXP(BETA + R * ZLOG(XINBTA) + T *
     $  ZLOG(ONE - XINBTA))
      IF (Y * YPREV .LE. ZERO) PREV = SQ
      G = ONE
    9 ADJ = G * Y
      SQ = ADJ * ADJ
      IF (SQ .GE. PREV) GOTO 10
      TX = XINBTA - ADJ
      IF (TX .GE. ZERO .AND. TX .LE. ONE) GOTO 11
   10 G = G / THREE
      GOTO 9
   11 IF (PREV .LE. ACU) GOTO 12
      IF (Y * Y .LE. ACU) GOTO 12
      IF (TX .EQ. ZERO .OR. TX .EQ. ONE) GOTO 10
      IF (TX .EQ. XINBTA) GOTO 12
      XINBTA = TX
      YPREV = Y
      GOTO 7
   12 IF (INDEX) XINBTA = ONE - XINBTA
      RETURN
      END
CEND OF AS 64/109
